{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/sharankaur/BitFit/frontend/src/routes/stats.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Actions } from 'react-native-router-flux';\nimport api from \"../config\";\nimport styles from \"../style/r_stats\";\nimport Button from \"../components/button\";\n\nvar Stats = function (_Component) {\n  _inherits(Stats, _Component);\n\n  var _super = _createSuper(Stats);\n\n  function Stats(props) {\n    var _this;\n\n    _classCallCheck(this, Stats);\n\n    _this = _super.call(this, props);\n\n    _this.addWorkout = function () {\n      var url = 'completed_workouts/add_workout';\n      var date = new Date();\n      var data = {\n        'uid': _this.props.uid,\n        'workout_name': _this.props.workout,\n        'duration': _this.props.duration,\n        'date': date.toString()\n      };\n      api.post(url, data).then(function (response) {\n        console.log(\"Added completed workout...\");\n\n        _this.updateTrophies(date);\n      }).catch(function (error) {\n        console.log(\"add workout call error\");\n        alert(error.message);\n      });\n    };\n\n    _this.updateTrophies = function (date) {\n      var url = 'trophy/update_user_trophies';\n      var data = {\n        'uid': _this.props.uid,\n        \"date\": date.toString()\n      };\n      api.post(url, data).then(function (response) {\n        console.log(response.data);\n        console.log(\"Updated Trophies...\");\n      }).catch(function (error) {\n        console.log(\"Update Trophies call error\");\n        alert(error.message);\n      });\n    };\n\n    _this.add = function () {\n      _this.addWorkout();\n    };\n\n    return _this;\n  }\n\n  _createClass(Stats, [{\n    key: \"goToProgress\",\n    value: function goToProgress() {\n      this.add();\n      Actions.progress({\n        uid: this.props.uid\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }\n      }, this.props.leveledUp ? React.createElement(Text, {\n        style: styles.finishTextStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }\n      }, \"Leveled Up \", this.props.focus, \"!\") : React.createElement(Text, {\n        style: styles.finishTextStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }\n      }, \"Completed Workout!\"), React.createElement(Text, {\n        style: styles.summaryTextStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }\n      }, \"Summary of Workout\"), React.createElement(Text, {\n        style: styles.detailsTextStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }\n      }, \"Workout: \", this.props.workout), React.createElement(Text, {\n        style: styles.detailsTextStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }\n      }, \"Focus: \", this.props.focus), React.createElement(Text, {\n        style: styles.detailsTextStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }\n      }, \"Hours spent: \", this.props.duration), React.createElement(Button, {\n        onPress: function onPress() {\n          return _this2.goToProgress();\n        },\n        label: \"Continue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return Stats;\n}(Component);\n\nexport { Stats as default };","map":{"version":3,"sources":["/Users/sharankaur/BitFit/frontend/src/routes/stats.js"],"names":["React","Component","Actions","api","styles","Button","Stats","props","addWorkout","url","date","Date","data","uid","workout","duration","toString","post","then","response","console","log","updateTrophies","catch","error","alert","message","add","progress","container","form","leveledUp","finishTextStyle","focus","summaryTextStyle","detailsTextStyle","goToProgress"],"mappings":"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","sourcesContent":["/**\n * Displays post workout stats\n * \n * Authors: Jeremy, Steven\n */\n\n// External imports\nimport React, { Component } from 'react';\nimport { View, Text } from \"react-native\";\nimport { Actions } from 'react-native-router-flux';\n\n// Internal imports\nimport api from '../config'\n\n// Stylesheet\nimport styles from '../style/r_stats';\n\n// Components\nimport Button from \"../components/button\";\n\n/**\n * Class that returns the stats page\n */\nexport default class Stats extends Component {\n\n    constructor(props) {\n        super(props)\n    }\n\n    addWorkout = () => {\n        /**\n         * Add workout to completed workout\n         */\n\n        let url = 'completed_workouts/add_workout';\n        let date = new Date();\n        let data = {\n            'uid': this.props.uid,\n            'workout_name': this.props.workout,\n            'duration': this.props.duration,\n            'date': date.toString()\n        };\n        api.post(url, data)\n            .then(response => {\n                // console.log(response.data)\n                console.log(\"Added completed workout...\")\n                this.updateTrophies(date)\n            })\n\n            .catch((error) => {\n                console.log(\"add workout call error\");\n                alert(error.message);\n            });\n    }\n\n    updateTrophies = (date) => {\n        /**\n         * Add workout to completed workout\n         */\n\n        let url = 'trophy/update_user_trophies';\n        let data = {\n            'uid': this.props.uid,\n            \"date\": date.toString()\n        };\n\n        api.post(url, data)\n            .then(response => {\n                console.log(response.data)\n                console.log(\"Updated Trophies...\")\n            })\n\n            .catch((error) => {\n                console.log(\"Update Trophies call error\");\n                alert(error.message);\n            });\n\n    }\n\n    add = () => {\n        this.addWorkout()\n    }\n\n    // Route to the progress page after completing workout\n    goToProgress() {\n        this.add()\n        Actions.progress({ uid: this.props.uid })\n    }\n\n    // renders stats display\n    render() {\n        return (\n            <View style={styles.container}>\n                <View style={styles.form}>\n\n                    {this.props.leveledUp ?\n                        <Text style={styles.finishTextStyle}>\n                            Leveled Up {this.props.focus}!\n                        </Text> :\n                        <Text style={styles.finishTextStyle}>\n                            Completed Workout!\n                        </Text>\n                    }\n                    <Text style={styles.summaryTextStyle}>\n                        Summary of Workout\n                    </Text>\n                    <Text style={styles.detailsTextStyle}>\n                        Workout: {this.props.workout}\n                    </Text>\n                    <Text style={styles.detailsTextStyle}>\n                        Focus: {this.props.focus}\n                    </Text>\n                    <Text style={styles.detailsTextStyle}>\n                        Hours spent: {this.props.duration}\n                    </Text>\n                    <Button onPress={() => this.goToProgress()}\n                        label=\"Continue\"\n                    />\n                </View>\n            </View>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}