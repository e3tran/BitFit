{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/sharankaur/BitFit/frontend/src/routes/login.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { Actions } from 'react-native-router-flux';\nimport api from \"../config\";\nimport styles from \"../style/r_login\";\nimport Input from \"../components/input\";\nimport Button from \"../components/button\";\nimport TextField from \"../components/text_field\";\nimport logo from \"../images/logo.png\";\nimport blue from \"../images/login_background.jpg\";\n\nvar Login = function (_Component) {\n  _inherits(Login, _Component);\n\n  var _super = _createSuper(Login);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _super.call(this, props);\n\n    _this.goToSignUp = function () {\n      Actions.signup();\n    };\n\n    _this.handleEmailChange = function (email) {\n      _this.setState({\n        email: email\n      });\n    };\n\n    _this.handlePasswordChange = function (password) {\n      _this.setState({\n        password: password\n      });\n    };\n\n    _this.handleLoginPress = function () {\n      var url = 'user/login';\n      var data = {\n        'email': _this.state.email,\n        'password': _this.state.password\n      };\n      api.post(url, data).then(function (response) {\n        Actions.progress({\n          uid: response.data[\"uid\"]\n        });\n      }).catch(function (error) {\n        Alert.alert('Invalid Credentials', \"Please try again.\", [{\n          text: 'OK',\n          onPress: function onPress() {\n            return console.log('OK Pressed');\n          }\n        }], {\n          cancelable: false\n        });\n\n        if (error.response) {\n          console.log(error.response.data);\n          console.log(error.response.status);\n        } else if (error.request) {\n          console.log(error.request);\n        } else {\n          console.log('Error', error.message);\n        }\n      });\n    };\n\n    _this.state = {\n      email: \"\",\n      password: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        source: blue,\n        style: styles.backgroundImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }\n      }), React.createElement(Image, {\n        source: logo,\n        style: styles.logo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }\n      }), React.createElement(KeyboardAvoidingView, {\n        behavior: Platform.OS == \"ios\" ? \"padding\" : \"height\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: Keyboard.dismiss,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: styles.form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }\n      }, React.createElement(Input, {\n        value: this.state.email,\n        onChangeText: this.handleEmailChange,\n        placeholder: \"Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 29\n        }\n      }), React.createElement(Input, {\n        value: this.state.password,\n        onChangeText: this.handlePasswordChange,\n        placeholder: \"Password\",\n        secureTextEntry: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 29\n        }\n      }), React.createElement(Button, {\n        label: \"Login\",\n        onPress: this.handleLoginPress,\n        disabled: !this.state.email || !this.state.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 29\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: this.goToSignUp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 29\n        }\n      }, React.createElement(TextField, {\n        style: styles.buttonTextStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 33\n        }\n      }, \"Do not have an account? Register here.\"))))));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport { Login as default };","map":{"version":3,"sources":["/Users/sharankaur/BitFit/frontend/src/routes/login.js"],"names":["React","Component","Actions","api","styles","Input","Button","TextField","logo","blue","Login","props","goToSignUp","signup","handleEmailChange","email","setState","handlePasswordChange","password","handleLoginPress","url","data","state","post","then","response","progress","uid","catch","error","Alert","alert","text","onPress","console","log","cancelable","status","request","message","container","backgroundImage","Platform","OS","Keyboard","dismiss","form","buttonTextStyle"],"mappings":"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","sourcesContent":["/**\n * The login page allows the user to login using their email and password. If\n * they don't have an account, they can create one.\n * \n * Authors: Imran, Sharan, Nour\n */\n\n// External imports\nimport React, { Component } from 'react';\nimport { Image, View, Text, TouchableOpacity, Alert, KeyboardAvoidingView, Platform, TouchableWithoutFeedback, Keyboard } from \"react-native\";\n\nimport { Actions } from 'react-native-router-flux';\n// import axios from \"axios\";\n\n// Internal imports\nimport api from '../config'\n\n// Stylesheet\nimport styles from '../style/r_login';\n\n// Components\nimport Input from \"../components/input\";\nimport Button from \"../components/button\";\nimport TextField from \"../components/text_field\";\n\n// Images\nimport logo from \"../images/logo.png\";\nimport blue from '../images/login_background.jpg';\n\n/**\n * Class that returns the Login page with correct components and API calls.\n */\nexport default class Login extends Component {\n    // Call the super constructor and initalize a state variable\n    constructor(props) {\n        super(props)\n        this.state = {\n            email: \"\",\n            password: \"\"\n        }\n    }\n\n    // Route to the signup page when sign up button is pressed\n    goToSignUp = () => {\n        Actions.signup()\n    }\n\n    // Set the email state variable when it is changed on UI\n    handleEmailChange = (email) => {\n        this.setState({ email: email });\n    };\n\n    // Set the password state variable when it is changed on UI\n    handlePasswordChange = (password) => {\n        this.setState({ password: password });\n    };\n\n    /**\n     * When the login button is pressed, the data in the text fields are passed\n     * in an API call to the backend to log the user in. It recieves a response\n     * object that is caught and processed accordingly.\n     */\n    handleLoginPress = () => {\n        /*\n        IMPORTANT: FOLLOW THIS FORMAT TO MAKE API CALLS\n        Notes:\n        - only last two parts should change in url field\n        - data should match \"Expected data\" in API method header\n        - response.data will match \"Expected response\" in API method header\n        - If code steps into .then: call went through\n        - If code steps into .catch: error (use postman to debug)\n        - You need to initialize .then and .catch as arrow functions if you\n          want to edit states in them\n        */\n\n        // Indicate which API to call and what data to pass in\n        let url = 'user/login';\n        let data = {\n            'email': this.state.email,\n            'password': this.state.password\n        };\n        // let uid = \"\";\n\n        // Make API call\n        api.post(url, data)\n            // Success\n            .then(response => {\n                /* Navigate to progress page and pass uid as prop. This allows\n                the next page to know which user is logged in */\n                Actions.progress({ uid: response.data[\"uid\"] })\n            })\n\n            // Error\n            .catch(error => {\n                // Display alert if there was an errr logging in\n                Alert.alert(\n                    'Invalid Credentials',\n                    \"Please try again.\",\n                    [{ text: 'OK', onPress: () => console.log('OK Pressed') }],\n                    { cancelable: false }\n                );\n\n                // Log error \n                if (error.response) {\n                    // Call was unsuccessful\n                    console.log(error.response.data);\n                    console.log(error.response.status);\n                } else if (error.request) {\n                    // Request was made but no response was received.\n                    console.log(error.request);\n                } else {\n                    // Something else cause an error\n                    console.log('Error', error.message);\n                }\n            })\n    };\n\n    // Render the correct components for the login screen\n    render() {\n        return (\n            <View style={styles.container}>\n                <Image source={blue} style={styles.backgroundImage} />\n                <Image source={logo} style={styles.logo} />\n                <KeyboardAvoidingView behavior={Platform.OS == \"ios\" ? \"padding\" : \"height\"}>\n                    <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n                        <View style={styles.form}>\n                            <Input\n                                value={this.state.email}\n                                onChangeText={this.handleEmailChange}\n                                placeholder={\"Email\"}\n                            />\n                            <Input\n                                value={this.state.password}\n                                onChangeText={this.handlePasswordChange}\n                                placeholder={\"Password\"}\n                                secureTextEntry={true}\n                            />\n                            <Button\n                                label={\"Login\"}\n                                onPress={this.handleLoginPress}\n                                disabled={!this.state.email || !this.state.password}\n                            />\n                            <TouchableOpacity onPress={this.goToSignUp} >\n                                <TextField style={styles.buttonTextStyle}>\n                                    Do not have an account? Register here.\n                    </TextField>\n                            </TouchableOpacity>\n                        </View>\n                    </TouchableWithoutFeedback>\n                </KeyboardAvoidingView>\n            </View>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}