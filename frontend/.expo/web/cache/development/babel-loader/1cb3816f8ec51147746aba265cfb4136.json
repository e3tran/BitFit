{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/sharankaur/BitFit/frontend/src/routes/settings.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { Actions } from 'react-native-router-flux';\nimport api from \"../config\";\nimport styles from \"../style/r_settings\";\nimport Input from \"../components/input\";\nimport backButton from \"../images/back_button.png\";\n\nvar Settings = function (_Component) {\n  _inherits(Settings, _Component);\n\n  var _super = _createSuper(Settings);\n\n  function Settings(props) {\n    var _this;\n\n    _classCallCheck(this, Settings);\n\n    _this = _super.call(this, props);\n\n    _this.onBackPress = function () {\n      if (_this.editsMade()) {\n        Alert.alert('You have some unsaved changes!', \"Are you sure you want to go back?\", [{\n          text: 'YES',\n          onPress: function onPress() {\n            return Actions.pop();\n          }\n        }, {\n          text: 'NO'\n        }], {\n          cancelable: false\n        });\n      } else {\n        Actions.pop();\n      }\n    };\n\n    _this.editsMade = function () {\n      return _this.state.currEmail || _this.state.password || _this.state.newEmail || _this.state.reEmail || _this.state.email || _this.state.currPassword || _this.state.newPassword || _this.state.rePassword || _this.state.emailD || _this.state.passwordD;\n    };\n\n    _this.disableEmail = function () {\n      return !(_this.state.currEmail && _this.state.password && _this.state.newEmail && _this.state.reEmail);\n    };\n\n    _this.disablePassword = function () {\n      return !(_this.state.email && _this.state.currPassword && _this.state.newPassword && _this.state.rePassword);\n    };\n\n    _this.disableDelete = function () {\n      return !(_this.state.emailD && _this.state.passwordD);\n    };\n\n    _this.onEmailPress = function () {\n      if (_this.state.newEmail != _this.state.reEmail) {\n        Alert.alert('Mismatched Emails', \"New email fields must match.\", [{\n          text: 'OK',\n          onPress: function onPress() {\n            _this.setState({\n              currEmail: \"\",\n              password: \"\",\n              newEmail: \"\",\n              reEmail: \"\"\n            });\n          }\n        }], {\n          cancelable: false\n        });\n        return;\n      }\n\n      var url = 'user/update_credentials';\n      var data = {\n        'uid': _this.state.uid,\n        'email': _this.state.currEmail,\n        'password': _this.state.password,\n        'u_email': _this.state.newEmail\n      };\n      api.post(url, data).then(function () {\n        Alert.alert('Email updated.', \"You can now use your updated email to login.\", [{\n          text: 'OK',\n          onPress: function onPress() {\n            Actions.profile({\n              uid: _this.state.uid,\n              edit: false\n            });\n          }\n        }], {\n          cancelable: false\n        });\n      }).catch(function () {\n        Alert.alert('Invalid Credentials', \"You either entered an incorrect email/password combination or your new email is invalid or taken. Please try again.\", [{\n          text: 'OK',\n          onPress: function onPress() {\n            _this.setState({\n              currEmail: \"\",\n              password: \"\",\n              newEmail: \"\",\n              reEmail: \"\"\n            });\n          }\n        }], {\n          cancelable: false\n        });\n      });\n    };\n\n    _this.onCurrEmailChange = function (currEmail) {\n      _this.setState({\n        currEmail: currEmail\n      });\n    };\n\n    _this.onPasswordChange = function (password) {\n      _this.setState({\n        password: password\n      });\n    };\n\n    _this.onNewEmailChange = function (newEmail) {\n      _this.setState({\n        newEmail: newEmail\n      });\n    };\n\n    _this.onReEmailChange = function (reEmail) {\n      _this.setState({\n        reEmail: reEmail\n      });\n    };\n\n    _this.onPasswordPress = function () {\n      if (_this.state.newPassword != _this.state.rePassword) {\n        Alert.alert('Mismatched Passwords', \"New password fields must match.\", [{\n          text: 'OK',\n          onPress: function onPress() {\n            _this.setState({\n              email: \"\",\n              currPassword: \"\",\n              newPassword: \"\",\n              rePassword: \"\"\n            });\n          }\n        }], {\n          cancelable: false\n        });\n        return;\n      }\n\n      var url = 'user/update_credentials';\n      var data = {\n        'uid': _this.state.uid,\n        'email': _this.state.email,\n        'password': _this.state.currPassword,\n        'u_password': _this.state.newPassword\n      };\n      api.post(url, data).then(function () {\n        Alert.alert('Password updated.', \"You can now use your updated password to login.\", [{\n          text: 'OK',\n          onPress: function onPress() {\n            Actions.profile({\n              uid: _this.state.uid,\n              edit: false\n            });\n          }\n        }], {\n          cancelable: false\n        });\n      }).catch(function () {\n        Alert.alert('Invalid Credentials', \"You either entered an incorrect email/password combination or your new password is less than 6 characters. Please try again.\", [{\n          text: 'OK',\n          onPress: function onPress() {\n            _this.setState({\n              email: \"\",\n              currPassword: \"\",\n              newPassword: \"\",\n              rePassword: \"\"\n            });\n          }\n        }], {\n          cancelable: false\n        });\n      });\n    };\n\n    _this.onEmailChange = function (email) {\n      _this.setState({\n        email: email\n      });\n    };\n\n    _this.onCurrPasswordChange = function (currPassword) {\n      _this.setState({\n        currPassword: currPassword\n      });\n    };\n\n    _this.onNewPasswordChange = function (newPassword) {\n      _this.setState({\n        newPassword: newPassword\n      });\n    };\n\n    _this.onRePasswordChange = function (rePassword) {\n      _this.setState({\n        rePassword: rePassword\n      });\n    };\n\n    _this.onEmailDChange = function (emailD) {\n      _this.setState({\n        emailD: emailD\n      });\n    };\n\n    _this.onPasswordDChange = function (passwordD) {\n      _this.setState({\n        passwordD: passwordD\n      });\n    };\n\n    _this.onDeletePress = function () {\n      Alert.alert('This action in irevertible!', \"All your data will be lost. Are you sure you want to continue?\", [{\n        text: 'YES',\n        onPress: function onPress() {\n          var url = 'user/delete';\n          var data = {\n            'uid': _this.state.uid,\n            'email': _this.state.emailD,\n            'password': _this.state.passwordD\n          };\n          api.post(url, data).then(function () {\n            Alert.alert('Account deleted.', \"We're sad to see you go!\", [{\n              text: 'OK',\n              onPress: function onPress() {\n                return Actions.login();\n              }\n            }], {\n              cancelable: false\n            });\n          }).catch(function () {\n            Alert.alert('Invalid Credentials', \"Please try again.\", [{\n              text: 'OK',\n              onPress: function onPress() {\n                _this.setState({\n                  emailD: \"\",\n                  passwordD: \"\"\n                });\n              }\n            }], {\n              cancelable: false\n            });\n          });\n        }\n      }, {\n        text: 'NO',\n        onPress: function onPress() {\n          return _this.setState({\n            emailD: \"\",\n            passwordD: \"\"\n          });\n        }\n      }], {\n        cancelable: false\n      });\n    };\n\n    _this.state = {\n      uid: \"\",\n      currEmail: \"\",\n      password: \"\",\n      newEmail: \"\",\n      reEmail: \"\",\n      email: \"\",\n      currPassword: \"\",\n      newPassword: \"\",\n      rePassword: \"\",\n      emailD: \"\",\n      passwordD: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Settings, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var url = 'user/get';\n      var data = {\n        'uid': this.props.uid\n      };\n      api.post(url, data).then(function () {\n        _this2.setState({\n          uid: _this2.props.uid\n        });\n      }).catch(function (error) {\n        if (error.response) {\n          console.log(error.response.data);\n          console.log(error.response.status);\n        } else if (error.request) {\n          console.log(error.request);\n        } else {\n          console.log('Error', error.message);\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var emailButtonStyle = !this.disableEmail() ? styles.button : [styles.button, styles.disabledB];\n      var emailTextStyle = !this.disableEmail() ? styles.buttonT : [styles.buttonT, styles.disabledT];\n      var passwordButtonStyle = !this.disablePassword() ? styles.button : [styles.button, styles.disabledB];\n      var passwordTextStyle = !this.disablePassword() ? styles.buttonT : [styles.buttonT, styles.disabledT];\n      var deleteButtonStyle = !this.disableDelete() ? [styles.button, styles.delete] : [styles.button, styles.delete, styles.disabledB];\n      var deleteTextStyle = !this.disableDelete() ? styles.buttonT : [styles.buttonT, styles.disabledT];\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }\n      }, React.createElement(KeyboardAvoidingView, {\n        behavior: Platform.OS == \"ios\" ? \"padding\" : \"height\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: Keyboard.dismiss,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 21\n        }\n      }, React.createElement(ScrollView, {\n        style: styles.scrollView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        style: styles.topBar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 29\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this3.onBackPress();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 33\n        }\n      }, React.createElement(Image, {\n        source: backButton,\n        style: styles.topButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 37\n        }\n      }))), React.createElement(Text, {\n        style: styles.header,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 29\n        }\n      }, \"Change Email\"), React.createElement(Input, {\n        value: this.state.currEmail,\n        style: styles.input,\n        onChangeText: this.onCurrEmailChange,\n        placeholder: \"Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 29\n        }\n      }), React.createElement(Input, {\n        value: this.state.password,\n        style: styles.input,\n        onChangeText: this.onPasswordChange,\n        placeholder: \"Password\",\n        secureTextEntry: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 29\n        }\n      }), React.createElement(Input, {\n        value: this.state.newEmail,\n        style: styles.input,\n        onChangeText: this.onNewEmailChange,\n        placeholder: \"New Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 29\n        }\n      }), React.createElement(Input, {\n        value: this.state.reEmail,\n        style: styles.input,\n        onChangeText: this.onReEmailChange,\n        placeholder: \"Re-enter New Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 29\n        }\n      }), React.createElement(TouchableOpacity, {\n        disabled: this.disableEmail(),\n        style: emailButtonStyle,\n        onPress: this.onEmailPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: emailTextStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 33\n        }\n      }, \"CHANGE EMAIL\")), React.createElement(Text, {\n        style: styles.header,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 29\n        }\n      }, \"Change Password\"), React.createElement(Input, {\n        value: this.state.email,\n        style: styles.input,\n        onChangeText: this.onEmailChange,\n        placeholder: \"Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 29\n        }\n      }), React.createElement(Input, {\n        value: this.state.currPassword,\n        style: styles.input,\n        onChangeText: this.onCurrPasswordChange,\n        placeholder: \"Password\",\n        secureTextEntry: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 29\n        }\n      }), React.createElement(Input, {\n        value: this.state.newPassword,\n        style: styles.input,\n        onChangeText: this.onNewPasswordChange,\n        placeholder: \"New Password\",\n        secureTextEntry: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 29\n        }\n      }), React.createElement(Input, {\n        value: this.state.rePassword,\n        style: styles.input,\n        onChangeText: this.onRePasswordChange,\n        placeholder: \"Re-enter New Password\",\n        secureTextEntry: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 29\n        }\n      }), React.createElement(TouchableOpacity, {\n        disabled: this.disablePassword(),\n        style: passwordButtonStyle,\n        onPress: this.onPasswordPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: passwordTextStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 33\n        }\n      }, \"CHANGE PASSWORD\")), React.createElement(Text, {\n        style: styles.header,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 29\n        }\n      }, \"Delete Account\"), React.createElement(Input, {\n        value: this.state.emailD,\n        style: styles.input,\n        onChangeText: this.onEmailDChange,\n        placeholder: \"Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 29\n        }\n      }), React.createElement(Input, {\n        value: this.state.passwordD,\n        style: styles.input,\n        onChangeText: this.onPasswordDChange,\n        placeholder: \"Password\",\n        secureTextEntry: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 29\n        }\n      }), React.createElement(TouchableOpacity, {\n        disabled: this.disableDelete(),\n        style: deleteButtonStyle,\n        onPress: this.onDeletePress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: deleteTextStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 33\n        }\n      }, \"DELETE ACCOUNT \"))))));\n    }\n  }]);\n\n  return Settings;\n}(Component);\n\nexport { Settings as default };","map":{"version":3,"sources":["/Users/sharankaur/BitFit/frontend/src/routes/settings.js"],"names":["React","Component","Actions","api","styles","Input","backButton","Settings","props","onBackPress","editsMade","Alert","alert","text","onPress","pop","cancelable","state","currEmail","password","newEmail","reEmail","email","currPassword","newPassword","rePassword","emailD","passwordD","disableEmail","disablePassword","disableDelete","onEmailPress","setState","url","data","uid","post","then","profile","edit","catch","onCurrEmailChange","onPasswordChange","onNewEmailChange","onReEmailChange","onPasswordPress","onEmailChange","onCurrPasswordChange","onNewPasswordChange","onRePasswordChange","onEmailDChange","onPasswordDChange","onDeletePress","login","error","response","console","log","status","request","message","emailButtonStyle","button","disabledB","emailTextStyle","buttonT","disabledT","passwordButtonStyle","passwordTextStyle","deleteButtonStyle","delete","deleteTextStyle","container","Platform","OS","Keyboard","dismiss","scrollView","topBar","topButton","header","input"],"mappings":"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","sourcesContent":["/**\n * The Settings page allows the user to edit their email, change their password,\n * and delete their account.\n * \n * Author: Nour\n */\n\n// External imports\nimport React, { Component } from 'react';\nimport { View, ScrollView, Image, Text, TouchableOpacity, Alert, KeyboardAvoidingView, Platform, TouchableWithoutFeedback, Keyboard } from 'react-native';\nimport { Actions } from 'react-native-router-flux';\n\n// Internal imports\nimport api from '../config'\n\n// Stylesheet\nimport styles from '../style/r_settings';\n\n// Components\nimport Input from \"../components/input\";\n\n// Images\nimport backButton from '../images/back_button.png'\n\n/**\n * Class that returns the Account Settings page with correct components and API calls.\n */\nexport default class Settings extends Component {\n\n    // Call the super constructor and initalize a state variable\n    constructor(props) {\n        super(props)\n        this.state = {\n            uid: \"\",\n            currEmail: \"\",\n            password: \"\",\n            newEmail: \"\",\n            reEmail: \"\",\n            email: \"\",\n            currPassword: \"\",\n            newPassword: \"\",\n            rePassword: \"\",\n            emailD: \"\",\n            passwordD: \"\"\n        }\n    }\n\n    onBackPress = () => {\n        if (this.editsMade()) {\n            Alert.alert(\n                'You have some unsaved changes!',\n                \"Are you sure you want to go back?\",\n                [{ text: 'YES', onPress: () => Actions.pop() },\n                { text: 'NO' }],\n                { cancelable: false }\n            );\n        } else {\n            Actions.pop()\n        }\n    }\n\n    editsMade = () => {\n        return (this.state.currEmail || this.state.password || this.state.newEmail || this.state.reEmail ||\n            this.state.email || this.state.currPassword || this.state.newPassword || this.state.rePassword ||\n            this.state.emailD || this.state.passwordD)\n    }\n\n    disableEmail = () => {\n        return !(this.state.currEmail && this.state.password && this.state.newEmail && this.state.reEmail)\n\n    }\n\n    disablePassword = () => {\n        return !(this.state.email && this.state.currPassword && this.state.newPassword && this.state.rePassword)\n    }\n\n    disableDelete = () => {\n        return !(this.state.emailD && this.state.passwordD)\n    }\n\n    onEmailPress = () => {\n        if (this.state.newEmail != this.state.reEmail) {\n            Alert.alert(\n                'Mismatched Emails',\n                \"New email fields must match.\",\n                [{ text: 'OK', onPress: () => { this.setState({ currEmail: \"\", password: \"\", newEmail: \"\", reEmail: \"\" }) } }],\n                { cancelable: false }\n            );\n\n            return;\n        }\n\n        // Call user API to get user info\n        let url = 'user/update_credentials';\n        let data = {\n            'uid': this.state.uid,\n            'email': this.state.currEmail,\n            'password': this.state.password,\n            'u_email': this.state.newEmail\n        };\n\n        // Make API call\n        api.post(url, data)\n            // Success\n            .then(() => {\n                Alert.alert(\n                    'Email updated.',\n                    \"You can now use your updated email to login.\",\n                    [{ text: 'OK', onPress: () => { Actions.profile({ uid: this.state.uid, edit: false }) } }],\n                    { cancelable: false }\n                );\n            })\n\n            // Error\n            .catch(() => {\n                Alert.alert(\n                    'Invalid Credentials',\n                    \"You either entered an incorrect email/password combination or your new email is invalid or taken. Please try again.\",\n                    [{ text: 'OK', onPress: () => { this.setState({ currEmail: \"\", password: \"\", newEmail: \"\", reEmail: \"\" }) } }],\n                    { cancelable: false }\n                );\n            });\n    }\n\n    onCurrEmailChange = (currEmail) => {\n        this.setState({ currEmail: currEmail });\n    }\n\n    onPasswordChange = (password) => {\n        this.setState({ password: password });\n    }\n\n    onNewEmailChange = (newEmail) => {\n        this.setState({ newEmail: newEmail });\n    }\n\n    onReEmailChange = (reEmail) => {\n        this.setState({ reEmail: reEmail });\n    }\n\n    onPasswordPress = () => {\n        if (this.state.newPassword != this.state.rePassword) {\n            Alert.alert(\n                'Mismatched Passwords',\n                \"New password fields must match.\",\n                [{ text: 'OK', onPress: () => { this.setState({ email: \"\", currPassword: \"\", newPassword: \"\", rePassword: \"\" }) } }],\n                { cancelable: false }\n            );\n\n            return;\n        }\n\n        // Call user API to get user info\n        let url = 'user/update_credentials';\n        let data = {\n            'uid': this.state.uid,\n            'email': this.state.email,\n            'password': this.state.currPassword,\n            'u_password': this.state.newPassword\n        };\n\n        // Make API call\n        api.post(url, data)\n            // Success\n            .then(() => {\n                Alert.alert(\n                    'Password updated.',\n                    \"You can now use your updated password to login.\",\n                    [{ text: 'OK', onPress: () => { Actions.profile({ uid: this.state.uid, edit: false }) } }],\n                    { cancelable: false }\n                );\n            })\n\n            // Error\n            .catch(() => {\n                Alert.alert(\n                    'Invalid Credentials',\n                    \"You either entered an incorrect email/password combination or your new password is less than 6 characters. Please try again.\",\n                    [{ text: 'OK', onPress: () => { this.setState({ email: \"\", currPassword: \"\", newPassword: \"\", rePassword: \"\" }) } }],\n                    { cancelable: false }\n                );\n            });\n    }\n\n    onEmailChange = (email) => {\n        this.setState({ email: email });\n    }\n\n    onCurrPasswordChange = (currPassword) => {\n        this.setState({ currPassword: currPassword });\n    }\n\n    onNewPasswordChange = (newPassword) => {\n        this.setState({ newPassword: newPassword });\n    }\n\n    onRePasswordChange = (rePassword) => {\n        this.setState({ rePassword: rePassword });\n    }\n\n    onEmailDChange = (emailD) => {\n        this.setState({ emailD: emailD });\n    }\n\n    onPasswordDChange = (passwordD) => {\n        this.setState({ passwordD: passwordD });\n    }\n\n    onDeletePress = () => {\n        Alert.alert(\n            'This action in irevertible!',\n            \"All your data will be lost. Are you sure you want to continue?\",\n            [{\n                text: 'YES', onPress: () => {\n                    // Call user API to get user info\n                    let url = 'user/delete';\n                    let data = {\n                        'uid': this.state.uid,\n                        'email': this.state.emailD,\n                        'password': this.state.passwordD,\n                    };\n\n                    // Make API call\n                    api.post(url, data)\n                        // Success\n                        .then(() => {\n                            Alert.alert(\n                                'Account deleted.',\n                                \"We're sad to see you go!\",\n                                [{ text: 'OK', onPress: () => Actions.login() }],\n                                { cancelable: false }\n                            );\n                        })\n\n                        // Error\n                        .catch(() => {\n                            Alert.alert(\n                                'Invalid Credentials',\n                                \"Please try again.\",\n                                [{ text: 'OK', onPress: () => { this.setState({ emailD: \"\", passwordD: \"\" }) } }],\n                                { cancelable: false }\n                            );\n                        });\n                }\n            },\n            { text: 'NO', onPress: () => this.setState({ emailD: \"\", passwordD: \"\" }) }],\n            { cancelable: false }\n        );\n    }\n\n    componentDidMount() {\n        // Call user API to get user info\n        let url = 'user/get';\n        let data = {\n            'uid': this.props.uid\n        };\n\n        // Make API call\n        api.post(url, data)\n            // Success\n            .then(() => {\n                /* Set the state for this page to include the relevant user \n                information returned from the API call */\n                this.setState({\n                    uid: this.props.uid\n                })\n            })\n\n            // Error\n            .catch(error => {\n                // Log error \n                if (error.response) {\n                    // Call was unsuccessful\n                    console.log(error.response.data);\n                    console.log(error.response.status);\n                } else if (error.request) {\n                    // Request was made but no response was received.\n                    console.log(error.request);\n                } else {\n                    // Something else cause an error\n                    console.log('Error', error.message);\n                }\n            });\n    }\n\n    render() {\n        let emailButtonStyle = !this.disableEmail() ? styles.button : [styles.button, styles.disabledB];\n        let emailTextStyle = !this.disableEmail() ? styles.buttonT : [styles.buttonT, styles.disabledT];\n\n        let passwordButtonStyle = !this.disablePassword() ? styles.button : [styles.button, styles.disabledB];\n        let passwordTextStyle = !this.disablePassword() ? styles.buttonT : [styles.buttonT, styles.disabledT];\n\n        let deleteButtonStyle = !this.disableDelete() ? [styles.button, styles.delete] : [styles.button, styles.delete, styles.disabledB];\n        let deleteTextStyle = !this.disableDelete() ? styles.buttonT : [styles.buttonT, styles.disabledT];\n\n        return (\n            <View style={styles.container}>\n                <KeyboardAvoidingView behavior={Platform.OS == \"ios\" ? \"padding\" : \"height\"}>\n                    <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n                        <ScrollView style={styles.scrollView}>\n                            <View style={styles.topBar}>\n                                <TouchableOpacity onPress={() => this.onBackPress()}>\n                                    <Image source={backButton} style={styles.topButton} />\n                                </TouchableOpacity>\n                            </View>\n\n                            <Text style={styles.header}>Change Email</Text>\n\n                            <Input\n                                value={this.state.currEmail}\n                                style={styles.input}\n                                onChangeText={this.onCurrEmailChange}\n                                placeholder={\"Email\"}\n                            />\n                            <Input\n                                value={this.state.password}\n                                style={styles.input}\n                                onChangeText={this.onPasswordChange}\n                                placeholder={\"Password\"}\n                                secureTextEntry={true}\n                            />\n                            <Input\n                                value={this.state.newEmail}\n                                style={styles.input}\n                                onChangeText={this.onNewEmailChange}\n                                placeholder={\"New Email\"}\n                            />\n                            <Input\n                                value={this.state.reEmail}\n                                style={styles.input}\n                                onChangeText={this.onReEmailChange}\n                                placeholder={\"Re-enter New Email\"}\n                            />\n\n                            <TouchableOpacity disabled={this.disableEmail()} style={emailButtonStyle} onPress={this.onEmailPress}>\n                                <Text style={emailTextStyle}>CHANGE EMAIL</Text>\n                            </TouchableOpacity>\n\n                            <Text style={styles.header}>Change Password</Text>\n\n                            <Input\n                                value={this.state.email}\n                                style={styles.input}\n                                onChangeText={this.onEmailChange}\n                                placeholder={\"Email\"}\n                            />\n                            <Input\n                                value={this.state.currPassword}\n                                style={styles.input}\n                                onChangeText={this.onCurrPasswordChange}\n                                placeholder={\"Password\"}\n                                secureTextEntry={true}\n                            />\n                            <Input\n                                value={this.state.newPassword}\n                                style={styles.input}\n                                onChangeText={this.onNewPasswordChange}\n                                placeholder={\"New Password\"}\n                                secureTextEntry={true}\n                            />\n                            <Input\n                                value={this.state.rePassword}\n                                style={styles.input}\n                                onChangeText={this.onRePasswordChange}\n                                placeholder={\"Re-enter New Password\"}\n                                secureTextEntry={true}\n                            />\n\n                            <TouchableOpacity disabled={this.disablePassword()} style={passwordButtonStyle} onPress={this.onPasswordPress}>\n                                <Text style={passwordTextStyle}>CHANGE PASSWORD</Text>\n                            </TouchableOpacity>\n\n                            <Text style={styles.header}>Delete Account</Text>\n\n                            <Input\n                                value={this.state.emailD}\n                                style={styles.input}\n                                onChangeText={this.onEmailDChange}\n                                placeholder={\"Email\"}\n                            />\n                            <Input\n                                value={this.state.passwordD}\n                                style={styles.input}\n                                onChangeText={this.onPasswordDChange}\n                                placeholder={\"Password\"}\n                                secureTextEntry={true}\n                            />\n\n                            <TouchableOpacity disabled={this.disableDelete()} style={deleteButtonStyle} onPress={this.onDeletePress}>\n                                <Text style={deleteTextStyle}>DELETE ACCOUNT </Text>\n                            </TouchableOpacity>\n                        </ScrollView>\n                    </TouchableWithoutFeedback>\n                </KeyboardAvoidingView>\n            </View>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}