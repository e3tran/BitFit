{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/sharankaur/BitFit/frontend/src/components/completed_workout.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { ListItem } from 'react-native-elements';\nimport styles from \"../style/c_completed_workout\";\n\nvar CompletedWorkout = function (_Component) {\n  _inherits(CompletedWorkout, _Component);\n\n  var _super = _createSuper(CompletedWorkout);\n\n  function CompletedWorkout() {\n    var _this;\n\n    _classCallCheck(this, CompletedWorkout);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.alertInformation = function () {\n      var message = 'Congrats, you completed the workout in ' + _this.props.workout.data.duration + \"!\";\n      var description = \"\";\n      Alert.alert(message, description, [{\n        text: 'OK',\n        onPress: function onPress() {\n          return console.log('OK Pressed');\n        }\n      }], {\n        cancelable: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CompletedWorkout, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          workout = _this$props.workout,\n          otherProps = _objectWithoutProperties(_this$props, [\"workout\"]);\n\n      return React.createElement(TouchableOpacity, {\n        onPress: this.alertInformation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }, React.createElement(ListItem, {\n        style: styles.listItem,\n        key: workout.data.workout_name,\n        title: workout.data.workout_name,\n        titleStyle: styles.titleStyle,\n        subtitle: React.createElement(Text, {\n          style: styles.item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 31\n          }\n        }, \"Duration: \", workout.data.duration),\n        rightTitle: React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 33\n          }\n        }, \"Date: \", workout.data.date),\n        bottomDivider: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return CompletedWorkout;\n}(Component);\n\nexport { CompletedWorkout as default };","map":{"version":3,"sources":["/Users/sharankaur/BitFit/frontend/src/components/completed_workout.js"],"names":["React","Component","ListItem","styles","CompletedWorkout","alertInformation","message","props","workout","data","duration","description","Alert","alert","text","onPress","console","log","cancelable","otherProps","listItem","workout_name","titleStyle","item","date"],"mappings":";;;;;;;;;;;;AAQA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,SAASC,QAAT,QAAyB,uBAAzB;AAIA,OAAOC,MAAP;;IAKqBC,gB;;;;;;;;;;;;;;;;UAGjBC,gB,GAAmB,YAAM;AACrB,UAAIC,OAAO,GAAG,4CAA4C,MAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwBC,QAApE,GAA+E,GAA7F;AACA,UAAIC,WAAW,GAAG,EAAlB;AACAC,MAAAA,KAAK,CAACC,KAAN,CACIP,OADJ,EAEIK,WAFJ,EAGI,CAAC;AAAEG,QAAAA,IAAI,EAAE,IAAR;AAAcC,QAAAA,OAAO,EAAE;AAAA,iBAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AAAA;AAAvB,OAAD,CAHJ,EAII;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAJJ;AAMH,K;;;;;;;6BAEQ;AAAA,wBAKD,KAAKX,KALJ;AAAA,UAGDC,OAHC,eAGDA,OAHC;AAAA,UAIEW,UAJF;;AAQL,aACI,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE,KAAKd,gBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAEF,MAAM,CAACiB,QAAxB;AACI,QAAA,GAAG,EAAEZ,OAAO,CAACC,IAAR,CAAaY,YADtB;AAEI,QAAA,KAAK,EAAEb,OAAO,CAACC,IAAR,CAAaY,YAFxB;AAGI,QAAA,UAAU,EAAElB,MAAM,CAACmB,UAHvB;AAII,QAAA,QAAQ,EAAE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEnB,MAAM,CAACoB,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAqCf,OAAO,CAACC,IAAR,CAAaC,QAAlD,CAJd;AAKI,QAAA,UAAU,EAAE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAaF,OAAO,CAACC,IAAR,CAAae,IAA1B,CALhB;AAMI,QAAA,aAAa,MANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAYH;;;;EAlCyCvB,S;;SAAzBG,gB","sourcesContent":["/**\n * This is the component that displays a completed workout in the activity log\n * \n * Authors: Imran\n */\n\n\n// External import\nimport React, { Component } from 'react';\nimport { Text, TouchableOpacity, Alert } from \"react-native\";\nimport { ListItem } from 'react-native-elements'\n\n// Internal import\n// Stylesheet\nimport styles from '../style/c_completed_workout';\n\n/**\n * This class contains a formatted list item for a completed workout data point\n */\nexport default class CompletedWorkout extends Component {\n\n    // Display a informationabout this completed workout\n    alertInformation = () => {\n        let message = 'Congrats, you completed the workout in ' + this.props.workout.data.duration + \"!\";\n        let description = \"\";\n        Alert.alert(\n            message,\n            description,\n            [{ text: 'OK', onPress: () => console.log('OK Pressed') }],\n            { cancelable: false }\n        );\n    }\n\n    render() {\n        // Saving the props\n        const {\n            workout,\n            ...otherProps\n        } = this.props;\n\n        // return a list formatted list item\n        return (\n            <TouchableOpacity onPress={this.alertInformation}>\n                <ListItem style={styles.listItem}\n                    key={workout.data.workout_name}\n                    title={workout.data.workout_name}\n                    titleStyle={styles.titleStyle}\n                    subtitle={<Text style={styles.item}>Duration: {workout.data.duration}</ Text>}\n                    rightTitle={<Text>Date: {workout.data.date}</Text>}\n                    bottomDivider\n                />\n            </TouchableOpacity>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}