{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/sharankaur/BitFit/frontend/src/components/nav_bar.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport styles from \"../style/c_nav_bar\";\n\nvar NavBar = function (_Component) {\n  _inherits(NavBar, _Component);\n\n  var _super = _createSuper(NavBar);\n\n  function NavBar() {\n    _classCallCheck(this, NavBar);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(NavBar, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          left = _this$props.left,\n          leftDisabled = _this$props.leftDisabled,\n          leftOnPress = _this$props.leftOnPress,\n          right = _this$props.right,\n          rightDisabled = _this$props.rightDisabled,\n          rightOnPress = _this$props.rightOnPress;\n      var leftStyle = leftDisabled ? [styles.button, styles.disabled] : styles.button;\n      var rightStyle = rightDisabled ? [styles.button, styles.disabled] : styles.button;\n      return right ? React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      }, React.createElement(TouchableOpacity, {\n        disabled: leftDisabled,\n        onPress: leftOnPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        source: left,\n        style: leftStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }\n      })), React.createElement(TouchableOpacity, {\n        disabled: rightDisabled,\n        onPress: rightOnPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        source: right,\n        style: rightStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }\n      }))) : React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }, React.createElement(TouchableOpacity, {\n        disabled: leftDisabled,\n        onPress: leftOnPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        source: left,\n        style: leftStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return NavBar;\n}(Component);\n\nexport { NavBar as default };","map":{"version":3,"sources":["/Users/sharankaur/BitFit/frontend/src/components/nav_bar.js"],"names":["React","Component","styles","NavBar","props","left","leftDisabled","leftOnPress","right","rightDisabled","rightOnPress","leftStyle","button","disabled","rightStyle","container"],"mappings":";;;;;;;;;;;AAOA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;AAIA,OAAOC,MAAP;;IAKqBC,M;;;;;;;;;;;;;6BAER;AAAA,wBAC2E,KAAKC,KADhF;AAAA,UACGC,IADH,eACGA,IADH;AAAA,UACSC,YADT,eACSA,YADT;AAAA,UACuBC,WADvB,eACuBA,WADvB;AAAA,UACoCC,KADpC,eACoCA,KADpC;AAAA,UAC2CC,aAD3C,eAC2CA,aAD3C;AAAA,UAC0DC,YAD1D,eAC0DA,YAD1D;AAGL,UAAMC,SAAS,GAAGL,YAAY,GAAG,CAACJ,MAAM,CAACU,MAAR,EAAgBV,MAAM,CAACW,QAAvB,CAAH,GAAsCX,MAAM,CAACU,MAA3E;AACA,UAAME,UAAU,GAAGL,aAAa,GAAG,CAACP,MAAM,CAACU,MAAR,EAAgBV,MAAM,CAACW,QAAvB,CAAH,GAAsCX,MAAM,CAACU,MAA7E;AAEA,aAAOJ,KAAK,GACR,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEN,MAAM,CAACa,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,gBAAD;AAAkB,QAAA,QAAQ,EAAET,YAA5B;AAA0C,QAAA,OAAO,EAAEC,WAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAEF,IAAf;AAAqB,QAAA,KAAK,EAAEM,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII,oBAAC,gBAAD;AAAkB,QAAA,QAAQ,EAAEF,aAA5B;AAA2C,QAAA,OAAO,EAAEC,YAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAEF,KAAf;AAAsB,QAAA,KAAK,EAAEM,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAJJ,CADQ,GAUR,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEZ,MAAM,CAACa,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,gBAAD;AAAkB,QAAA,QAAQ,EAAET,YAA5B;AAA0C,QAAA,OAAO,EAAEC,WAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAEF,IAAf;AAAqB,QAAA,KAAK,EAAEM,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CAVJ;AAgBH;;;;EAxB+BV,S;;SAAfE,M","sourcesContent":["/**\n * This is an internal nav bar component that uses Touchable opacity.\n * \n * Author: Nour\n */\n\n// External Imports\nimport React, {Component} from 'react';\nimport {View, TouchableOpacity, Image } from \"react-native\";\n\n// Internal Imports\nimport styles from \"../style/c_nav_bar\";\n\n/**\n * Class that returns a Touchable Opacity object with the correct style and text.\n */\nexport default class NavBar extends Component {\n    // save the props from when the button is rendered\n    render() {\n        const { left, leftDisabled, leftOnPress, right, rightDisabled, rightOnPress } = this.props\n\n        const leftStyle = leftDisabled ? [styles.button, styles.disabled] : styles.button\n        const rightStyle = rightDisabled ? [styles.button, styles.disabled] : styles.button\n\n        return right ? (\n            <View style={styles.container}>\n                <TouchableOpacity disabled={leftDisabled} onPress={leftOnPress}>\n                    <Image source={left} style={leftStyle} />\n                </TouchableOpacity>\n                <TouchableOpacity disabled={rightDisabled} onPress={rightOnPress}>\n                    <Image source={right} style={rightStyle} />\n                </TouchableOpacity>\n            </View>\n        ) : (\n            <View style={styles.container}>\n                <TouchableOpacity disabled={leftDisabled} onPress={leftOnPress}>\n                    <Image source={left} style={leftStyle} />\n                </TouchableOpacity>\n            </View>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}