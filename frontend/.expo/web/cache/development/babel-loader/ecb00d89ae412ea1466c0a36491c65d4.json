{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/sharankaur/BitFit/frontend/src/routes/profile.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Actions } from 'react-native-router-flux';\nimport { Grid, Row, Col } from \"react-native-easy-grid\";\nimport axios from 'axios';\nimport * as ImagePicker from 'expo-image-picker';\nimport Constants from 'expo-constants';\nimport * as Permissions from 'expo-permissions';\nimport api from \"../config\";\nimport styles from \"../style/r_profile\";\nimport Button from \"../components/button\";\nimport Input from \"../components/input\";\nimport NavBar from \"../components/nav_bar\";\nimport LoadingScreen from \"../components/loading\";\nimport backButton from \"../images/back_button.png\";\nimport editButton from \"../images/edit_button.png\";\nimport saveButton from \"../images/save_button.png\";\nimport { defaultPhoto } from \"../images/default_photo.js\";\nimport blue from \"../images/blue.jpg\";\n\nvar Profile = function (_Component) {\n  _inherits(Profile, _Component);\n\n  var _super = _createSuper(Profile);\n\n  function Profile(props) {\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    _this = _super.call(this, props);\n\n    _this.editsMade = function () {\n      return _this.state.eFullname != _this.state.fullname || _this.state.eUsername != _this.state.username || _this.state.eSessions != _this.state.sessions || _this.state.eTime != _this.state.time || _this.state.eAvatar != _this.state.avatar;\n    };\n\n    _this.onBackPress = function () {\n      if (_this.state.edit) {\n        if (_this.editsMade()) {\n          Alert.alert('You have some unsaved changes!', \"Are you sure you want to go back?\", [{\n            text: 'YES',\n            onPress: function onPress() {\n              return Actions.progress({\n                uid: _this.state.uid\n              });\n            }\n          }, {\n            text: 'NO'\n          }], {\n            cancelable: false\n          });\n        } else {\n          Actions.progress({\n            uid: _this.state.uid\n          });\n        }\n      } else {\n        Actions.progress({\n          uid: _this.state.uid\n        });\n      }\n    };\n\n    _this.onEditPress = function () {\n      Actions.profile({\n        uid: _this.state.uid,\n        edit: true\n      });\n\n      _this.getPermissionAsync();\n    };\n\n    _this.onSavePress = function () {\n      Alert.alert('Are you sure you want to save your changes?', \"\", [{\n        text: 'YES',\n        onPress: function onPress() {\n          var url = 'user/update';\n          var data = {\n            'uid': _this.props.uid\n          };\n\n          if (_this.state.eUsername != _this.state.username) {\n            data.username = _this.state.eUsername;\n          }\n\n          if (_this.state.eFullname != _this.state.fullname) {\n            data.fullname = _this.state.eFullname;\n          }\n\n          if (_this.state.eAvatar != _this.state.avatar) {\n            data.avatar = _this.state.eAvatar;\n          }\n\n          api.post(url, data).then(function () {\n            _this.setState({\n              username: _this.state.eUsername,\n              fullname: _this.state.eFullname,\n              avatar: _this.state.eAvatar\n            });\n\n            Actions.profile({\n              uid: _this.state.uid\n            });\n          }).catch(function (error) {\n            if (error.response) {\n              console.log(error.userData.username);\n              console.log(error.userData.fullname);\n              console.log(error.response.status);\n            } else if (error.request) {\n              console.log(error.request);\n            } else {\n              console.log('Error', error.message);\n            }\n          });\n        }\n      }, {\n        text: 'NO'\n      }], {\n        cancelable: false\n      });\n    };\n\n    _this.onLogoutPress = function () {\n      Alert.alert('Are you sure you want to log out?', \"You will be taken to the log in screen.\", [{\n        text: 'YES',\n        onPress: function onPress() {\n          return Actions.login();\n        }\n      }, {\n        text: 'NO'\n      }], {\n        cancelable: false\n      });\n    };\n\n    _this.onEditPhotoPress = function (eAvatar) {\n      _this.setState({\n        eAvatar: eAvatar\n      });\n    };\n\n    _this.resetStats = function () {\n      var url = 'progress/reset_stats';\n      var info = {\n        'uid': _this.props.uid\n      };\n      api.post(url, info).then(function (response) {\n        _this.setState({\n          eSessions: 0,\n          eTime: 0.0\n        });\n      }).catch(function (error) {\n        if (error.response) {\n          console.log(error.userData);\n          console.log(error.response.status);\n        } else if (error.request) {\n          console.log(error.request);\n        } else {\n          console.log('Error', error.message);\n        }\n      });\n    };\n\n    _this.onResetStatsPress = function () {\n      Alert.alert('This will reset all your stats!', \"If you save, they will be lost forever. Are you sure you want to proceed?\", [{\n        text: 'YES',\n        onPress: function onPress() {\n          return _this.resetStats();\n        }\n      }, {\n        text: 'NO'\n      }], {\n        cancelable: false\n      });\n    };\n\n    _this.onNameChange = function (eFullname) {\n      _this.setState({\n        eFullname: eFullname\n      });\n    };\n\n    _this.onUsernameChange = function (eUsername) {\n      _this.setState({\n        eUsername: eUsername\n      });\n    };\n\n    _this.onAccountSettingsPress = function () {\n      Actions.settings({\n        uid: _this.state.uid\n      });\n    };\n\n    _this._pickImage = function _callee() {\n      var result;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n                mediaTypes: ImagePicker.MediaTypeOptions.All,\n                allowsEditing: true,\n                aspect: [4, 3],\n                quality: 1,\n                base64: true\n              }));\n\n            case 3:\n              result = _context.sent;\n\n              if (!result.cancelled) {\n                _this.onEditPhotoPress(result.base64);\n              }\n\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    };\n\n    _this.getPermissionAsync = function _callee2() {\n      var _await$Permissions$as, status;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!Constants.platform.ios) {\n                _context2.next = 6;\n                break;\n              }\n\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA_ROLL));\n\n            case 3:\n              _await$Permissions$as = _context2.sent;\n              status = _await$Permissions$as.status;\n\n              if (status !== 'granted') {\n                alert('Sorry, we need camera roll permissions to make this work!');\n              }\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.componentDidMount = function () {\n      var url1 = 'user/get';\n      var data1 = {\n        'uid': _this.props.uid\n      };\n      var url2 = 'workouts/get_completed_workouts';\n      var data2 = {\n        'uid': _this.props.uid\n      };\n      var requestOne = api.post(url1, data1);\n      var requestTwo = api.post(url2, data2);\n      axios.all([requestOne, requestTwo]).then(axios.spread(function () {\n        for (var _len = arguments.length, responses = new Array(_len), _key = 0; _key < _len; _key++) {\n          responses[_key] = arguments[_key];\n        }\n\n        var userData = responses[0].data;\n        var completedWorkoutsData = responses[1].data;\n        var sessions = 0;\n        var time = 0.0;\n\n        for (var completed_workout_id in completedWorkoutsData) {\n          sessions += 1;\n          time += parseFloat(completedWorkoutsData[completed_workout_id].duration);\n        }\n\n        _this.setState({\n          sessions: sessions,\n          eSessions: sessions,\n          time: time,\n          eTime: time,\n          uid: _this.props.uid,\n          username: userData.username,\n          eUsername: userData.username,\n          fullname: userData.fullname,\n          eFullname: userData.fullname,\n          email: userData.email,\n          avatar: userData.avatar,\n          eAvatar: userData.avatar,\n          edit: _this.props.edit,\n          isloading: false\n        });\n      })).catch(function (error) {\n        if (error.response) {\n          console.log(error.response.data);\n          console.log(error.response.status);\n        } else if (error.request) {\n          console.log(error.request);\n        } else {\n          console.log('Error', error.message);\n        }\n      });\n    };\n\n    _this.state = {\n      uid: \"\",\n      username: \"\",\n      eUsername: \"\",\n      fullname: \"\",\n      eFullname: \"\",\n      email: \"\",\n      avatar: \"\",\n      eAvatar: \"\",\n      sessions: 0,\n      eSessions: 0,\n      time: 0.0,\n      eTime: 0.0,\n      edit: false,\n      isLoading: true\n    };\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var deletePhotoStyle = this.state.eAvatar == \"\" + defaultPhoto ? null : styles.button;\n      var resetStatsStyle = this.state.eSessions == 0 && this.state.eTime == 0 ? null : styles.button;\n      var backImgStyle = this.state.eAvatar == \"\" + defaultPhoto ? styles.backImage : [styles.backImage, styles.longerImg];\n      return this.props.edit ? React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }\n      }, React.createElement(ScrollView, {\n        style: styles.scrollView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        style: backImgStyle,\n        source: blue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 21\n        }\n      }), React.createElement(NavBar, {\n        left: backButton,\n        leftOnPress: this.onBackPress,\n        right: saveButton,\n        rightOnPress: this.onSavePress,\n        rightDisabled: !(this.editsMade() && this.state.eUsername && this.state.eFullname && this.state.eAvatar),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 21\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: this._pickImage,\n        style: {\n          margin: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        style: styles.photo,\n        resizeMode: \"cover\",\n        source: {\n          uri: \"data:image/gif;base64,\" + this.state.eAvatar\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        style: deletePhotoStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 21\n        }\n      }, React.createElement(Button, {\n        hide: this.state.eAvatar == \"\" + defaultPhoto,\n        label: 'Delete Profile Photo',\n        onPress: function onPress() {\n          return _this2.onEditPhotoPress(\"\" + defaultPhoto);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 25\n        }\n      })), React.createElement(Grid, {\n        elevation: 5,\n        style: styles.statsGrid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 21\n        }\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 25\n        }\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.statsTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 33\n        }\n      }, \"Sessions\")), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.stats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 33\n        }\n      }, this.state.eSessions))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 25\n        }\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.statsTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 33\n        }\n      }, \"Time\")), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.stats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 33\n        }\n      }, this.state.eTime)))), React.createElement(View, {\n        style: resetStatsStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 21\n        }\n      }, React.createElement(Button, {\n        hide: this.state.eSessions == 0 && this.state.eTime == 0,\n        label: 'Reset Stats',\n        onPress: function onPress() {\n          return _this2.onResetStatsPress();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        elevation: 5,\n        style: styles.inputGrid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 21\n        }\n      }, React.createElement(Input, {\n        style: styles.input,\n        value: this.state.eFullname,\n        onChangeText: this.onNameChange,\n        placeholder: \"Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 25\n        }\n      }), React.createElement(Input, {\n        style: styles.input,\n        value: this.state.eUsername,\n        onChangeText: this.onUsernameChange,\n        placeholder: \"Username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 25\n        }\n      })))) : React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 17\n        }\n      }, React.createElement(ScrollView, {\n        style: styles.scrollView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        style: styles.backImage,\n        source: blue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 25\n        }\n      }), React.createElement(NavBar, {\n        left: backButton,\n        leftOnPress: this.onBackPress,\n        right: editButton,\n        rightOnPress: this.onEditPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 25\n        }\n      }), React.createElement(Image, {\n        source: {\n          uri: \"data:image/gif;base64,\" + this.state.avatar\n        },\n        style: styles.photo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 25\n        }\n      }), React.createElement(Grid, {\n        elevation: 5,\n        style: styles.statsGrid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 25\n        }\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 29\n        }\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        style: styles.statsTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 37\n        }\n      }, \"Sessions\")), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        style: styles.stats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 37\n        }\n      }, this.state.sessions))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 29\n        }\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        style: styles.statsTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 37\n        }\n      }, \"Time\")), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        style: styles.stats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 37\n        }\n      }, this.state.time)))), React.createElement(View, {\n        elevation: 5,\n        style: styles.infoGrid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.info,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 29\n        }\n      }, this.state.fullname), React.createElement(Text, {\n        style: styles.info,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 29\n        }\n      }, \"@\", this.state.username), React.createElement(Text, {\n        style: styles.info,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 29\n        }\n      }, this.state.email)), React.createElement(View, {\n        style: styles.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 25\n        }\n      }, React.createElement(Button, {\n        label: 'Account Settings',\n        onPress: function onPress() {\n          return _this2.onAccountSettingsPress();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 29\n        }\n      }), React.createElement(Button, {\n        label: 'Log Out',\n        onPress: function onPress() {\n          return _this2.onLogoutPress();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 29\n        }\n      }))));\n    }\n  }]);\n\n  return Profile;\n}(Component);\n\nexport { Profile as default };","map":{"version":3,"sources":["/Users/sharankaur/BitFit/frontend/src/routes/profile.js"],"names":["React","Component","Actions","Grid","Row","Col","axios","ImagePicker","Constants","Permissions","api","styles","Button","Input","NavBar","LoadingScreen","backButton","editButton","saveButton","defaultPhoto","blue","Profile","props","editsMade","state","eFullname","fullname","eUsername","username","eSessions","sessions","eTime","time","eAvatar","avatar","onBackPress","edit","Alert","alert","text","onPress","progress","uid","cancelable","onEditPress","profile","getPermissionAsync","onSavePress","url","data","post","then","setState","catch","error","response","console","log","userData","status","request","message","onLogoutPress","login","onEditPhotoPress","resetStats","info","onResetStatsPress","onNameChange","onUsernameChange","onAccountSettingsPress","settings","_pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","base64","result","cancelled","platform","ios","askAsync","CAMERA_ROLL","componentDidMount","url1","data1","url2","data2","requestOne","requestTwo","all","spread","responses","completedWorkoutsData","completed_workout_id","parseFloat","duration","email","isloading","isLoading","deletePhotoStyle","button","resetStatsStyle","backImgStyle","backImage","longerImg","container","scrollView","margin","photo","uri","statsGrid","statsTitle","stats","inputGrid","input","infoGrid"],"mappings":"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","sourcesContent":["/**\n * The profile page displays the current stats about the user and their\n * information. It is also where the page where users can edit their \n * infromation and reset their stats.\n * \n * Authors: Nour and Samay\n */\n\n// External imports\nimport React, { Component } from 'react';\nimport { View, ScrollView, Image, Text, TouchableOpacity, Alert } from 'react-native';\nimport { Actions } from 'react-native-router-flux';\nimport { Grid, Row, Col } from \"react-native-easy-grid\";\nimport axios from 'axios'\n\n// DEBUG\nimport * as ImagePicker from 'expo-image-picker';\nimport Constants from 'expo-constants';\nimport * as Permissions from 'expo-permissions';\n\n// Internal imports\nimport api from '../config'\n\n// Stylesheet\nimport styles from '../style/r_profile';\n\n// Components\nimport Button from \"../components/button\";\nimport Input from \"../components/input\";\nimport NavBar from \"../components/nav_bar\"\nimport LoadingScreen from \"../components/loading\"\n\n// Images\nimport backButton from '../images/back_button.png'\nimport editButton from '../images/edit_button.png'\nimport saveButton from '../images/save_button.png'\nimport { defaultPhoto } from '../images/default_photo.js';\nimport blue from '../images/blue.jpg'\n\n/**\n * Class that returns the Profile page with correct components and API calls.\n */\nexport default class Profile extends Component {\n\n    // Call the super constructor and initalize a state variable\n    constructor(props) {\n        super(props)\n        this.state = {\n            uid: \"\",\n            username: \"\",\n            eUsername: \"\",\n            fullname: \"\",\n            eFullname: \"\",\n            email: \"\",\n            avatar: \"\",\n            eAvatar: \"\",\n            sessions: 0,\n            eSessions: 0,\n            time: 0.0,\n            eTime: 0.0,\n            edit: false,\n            isLoading: true\n        }\n    }\n\n    editsMade = () => {\n        return (this.state.eFullname != this.state.fullname) || (this.state.eUsername != this.state.username) ||\n            (this.state.eSessions != this.state.sessions) || (this.state.eTime != this.state.time) || (this.state.eAvatar != this.state.avatar)\n    }\n\n    onBackPress = () => {\n        if (this.state.edit) {\n            if (this.editsMade()) {\n                Alert.alert(\n                    'You have some unsaved changes!',\n                    \"Are you sure you want to go back?\",\n                    [{ text: 'YES', onPress: () => Actions.progress({ uid: this.state.uid }) },\n                    { text: 'NO' }],\n                    { cancelable: false }\n                );\n            } else {\n                Actions.progress({ uid: this.state.uid })\n            }\n        } else {\n            Actions.progress({ uid: this.state.uid })\n        }\n    }\n\n    onEditPress = () => {\n        Actions.profile({ uid: this.state.uid, edit: true })\n        this.getPermissionAsync()\n    }\n\n    onSavePress = () => {\n        Alert.alert(\n            'Are you sure you want to save your changes?',\n            \"\",\n            [{\n                text: 'YES', onPress: () => {\n                    // Call user API to get user info\n                    let url = 'user/update';\n                    let data = {\n                        'uid': this.props.uid\n                    };\n\n                    if (this.state.eUsername != this.state.username) {\n                        data.username = this.state.eUsername;\n                    }\n\n                    if (this.state.eFullname != this.state.fullname) {\n                        data.fullname = this.state.eFullname;\n                    }\n\n                    if (this.state.eAvatar != this.state.avatar) {\n                        data.avatar = this.state.eAvatar;\n                    }\n\n                    // Make API call\n                    api.post(url, data)\n                        // Success\n                        .then(() => {\n                            /* Set the state for this page to include the relevant user \n                            information returned from the API call */\n                            this.setState({\n                                username: this.state.eUsername,\n                                fullname: this.state.eFullname,\n                                avatar: this.state.eAvatar\n                            })\n\n                            Actions.profile({ uid: this.state.uid })\n                        })\n\n                        // Error\n                        .catch(error => {\n                            // Log error \n                            if (error.response) {\n                                // Call was unsuccessful\n                                console.log(error.userData.username);\n                                console.log(error.userData.fullname);\n                                console.log(error.response.status);\n                            } else if (error.request) {\n                                // Request was made but no response was received.\n                                console.log(error.request);\n                            } else {\n                                // Something else cause an error\n                                console.log('Error', error.message);\n                            }\n                        });\n\n                    // AXIOS CALL WHEN COMPLETED WORKOUTS API IS DONE\n                }\n            },\n            { text: 'NO' }],\n            { cancelable: false }\n        );\n\n\n    }\n\n    onLogoutPress = () => {\n        Alert.alert(\n            'Are you sure you want to log out?',\n            \"You will be taken to the log in screen.\",\n            [{ text: 'YES', onPress: () => Actions.login() },\n            { text: 'NO' }],\n            { cancelable: false }\n        );\n    }\n\n    onEditPhotoPress = (eAvatar) => {\n        this.setState({ eAvatar: eAvatar });\n    }\n\n    resetStats = () => {\n        // Indicate which API to call and what data to pass in\n        let url = 'progress/reset_stats';\n        let info = {\n            'uid': this.props.uid\n        };\n\n        // Make API call\n        api.post(url, info)\n            // Success\n            .then(response => {\n                this.setState({\n                    eSessions: 0,\n                    eTime: 0.0\n                })\n            })\n\n            // Error\n            .catch(error => {\n                // Log error \n                if (error.response) {\n                    // Call was unsuccessful\n                    console.log(error.userData);\n                    console.log(error.response.status);\n                } else if (error.request) {\n                    // Request was made but no response was received.\n                    console.log(error.request);\n                } else {\n                    // Something else cause an error\n                    console.log('Error', error.message);\n                }\n            });\n    }\n\n    onResetStatsPress = () => {\n        Alert.alert(\n            'This will reset all your stats!',\n            \"If you save, they will be lost forever. Are you sure you want to proceed?\",\n            [{ text: 'YES', onPress: () => this.resetStats() },\n            { text: 'NO' }],\n            { cancelable: false }\n        );\n    }\n\n    onNameChange = (eFullname) => {\n        this.setState({ eFullname: eFullname });\n    }\n\n    onUsernameChange = (eUsername) => {\n        this.setState({ eUsername: eUsername });\n    }\n\n    onAccountSettingsPress = () => {\n        Actions.settings({ uid: this.state.uid })\n    }\n\n    _pickImage = async () => {\n        try {\n            let result = await ImagePicker.launchImageLibraryAsync({\n                mediaTypes: ImagePicker.MediaTypeOptions.All,\n                allowsEditing: true,\n                aspect: [4, 3],\n                quality: 1,\n                base64: true\n            });\n            if (!result.cancelled) {\n                this.onEditPhotoPress(result.base64)\n            }\n        } catch (E) {\n            console.log(E);\n        }\n    }\n\n    getPermissionAsync = async () => {\n        if (Constants.platform.ios) {\n            const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n            if (status !== 'granted') {\n                alert('Sorry, we need camera roll permissions to make this work!');\n            }\n        }\n    };\n\n    componentDidMount = () => {\n        // Call user API to get user info\n        let url1 = 'user/get';\n        let data1 = {\n            'uid': this.props.uid\n        };\n\n        // Indicate which API to call and what data to pass in\n        let url2 = 'workouts/get_completed_workouts';\n        let data2 = {\n            'uid': this.props.uid\n        };\n\n        const requestOne = api.post(url1, data1);\n        const requestTwo = api.post(url2, data2);\n\n        axios\n            .all([requestOne, requestTwo])\n            .then(\n                axios.spread((...responses) => {\n                    const userData = responses[0].data;\n                    const completedWorkoutsData = responses[1].data;\n\n                    let sessions = 0\n                    let time = 0.0\n                    // Iterate through each completed workout for this user\n                    for (var completed_workout_id in completedWorkoutsData) {\n                        sessions += 1\n                        time += parseFloat(completedWorkoutsData[completed_workout_id].duration)\n                    }\n                    this.setState({\n                        sessions: sessions,\n                        eSessions: sessions,\n                        time: time,\n                        eTime: time,\n                        uid: this.props.uid,\n                        username: userData.username,\n                        eUsername: userData.username,\n                        fullname: userData.fullname,\n                        eFullname: userData.fullname,\n                        email: userData.email,\n                        avatar: userData.avatar,\n                        eAvatar: userData.avatar,\n                        edit: this.props.edit,\n                        isloading: false,\n                    })\n                })\n            )\n\n            // Error\n            .catch(error => {\n                // Log error \n                if (error.response) {\n                    // Call was unsuccessful\n                    console.log(error.response.data);\n                    console.log(error.response.status);\n                } else if (error.request) {\n                    // Request was made but no response was received.\n                    console.log(error.request);\n                } else {\n                    // Something else cause an error\n                    console.log('Error', error.message);\n                }\n            });\n    }\n\n    render() {\n        const deletePhotoStyle = this.state.eAvatar == `${defaultPhoto}` ? null : styles.button\n        const resetStatsStyle = this.state.eSessions == 0 && this.state.eTime == 0 ? null : styles.button\n        const backImgStyle = this.state.eAvatar == `${defaultPhoto}` ? styles.backImage : [styles.backImage, styles.longerImg]\n\n        return (this.props.edit ? (\n            <View style={styles.container}>\n                <ScrollView style={styles.scrollView}>\n                    <Image style={backImgStyle} source={blue} />\n\n                    <NavBar\n                        left={backButton}\n                        leftOnPress={this.onBackPress}\n                        right={saveButton}\n                        rightOnPress={this.onSavePress}\n                        rightDisabled={!(this.editsMade() && this.state.eUsername && this.state.eFullname && this.state.eAvatar)}\n                    >\n                    </NavBar>\n\n                    <TouchableOpacity onPress={this._pickImage} style={{ margin: 0 }} >\n                        <Image\n                            style={styles.photo}\n                            resizeMode='cover'\n                            source={{ uri: `data:image/gif;base64,${this.state.eAvatar}` }}\n                        />\n                    </TouchableOpacity>\n\n                    <View style={deletePhotoStyle}>\n                        <Button hide={this.state.eAvatar == `${defaultPhoto}`} label={'Delete Profile Photo'} onPress={() => this.onEditPhotoPress(`${defaultPhoto}`)} />\n                    </View>\n\n                    <Grid elevation={5} style={styles.statsGrid}>\n                        <Col>\n                            <Row>\n                                <Text style={styles.statsTitle}>Sessions</Text>\n                            </Row>\n                            <Row>\n                                <Text style={styles.stats}>\n                                    {this.state.eSessions}\n                                </Text>\n                            </Row>\n                        </Col>\n                        <Col>\n                            <Row>\n                                <Text style={styles.statsTitle}>Time</Text>\n                            </Row>\n                            <Row>\n                                <Text style={styles.stats}>\n                                    {this.state.eTime}\n                                </Text>\n                            </Row>\n                        </Col>\n                    </Grid>\n\n                    <View style={resetStatsStyle}>\n                        <Button hide={this.state.eSessions == 0 && this.state.eTime == 0} label={'Reset Stats'} onPress={() => this.onResetStatsPress()} />\n                    </View>\n\n                    <View elevation={5} style={styles.inputGrid}>\n                        <Input\n                            style={styles.input}\n                            value={this.state.eFullname}\n                            onChangeText={this.onNameChange}\n                            placeholder={\"Name\"}\n                        />\n                        <Input\n                            style={styles.input}\n                            value={this.state.eUsername}\n                            onChangeText={this.onUsernameChange}\n                            placeholder={\"Username\"}\n                        />\n                    </View>\n                </ScrollView>\n            </View>\n\n        ) : (\n                <View style={styles.container}>\n                    <ScrollView style={styles.scrollView}>\n                        <Image style={styles.backImage} source={blue} />\n\n                        <NavBar\n                            left={backButton}\n                            leftOnPress={this.onBackPress}\n                            right={editButton}\n                            rightOnPress={this.onEditPress}\n                        >\n                        </NavBar>\n\n                        <Image source={{ uri: `data:image/gif;base64,${this.state.avatar}` }} style={styles.photo} />\n\n                        <Grid elevation={5} style={styles.statsGrid}>\n                            <Col>\n                                <Row>\n                                    <Text style={styles.statsTitle}>Sessions</Text>\n                                </Row>\n                                <Row>\n                                    <Text style={styles.stats}>\n                                        {this.state.sessions}\n                                    </Text>\n                                </Row>\n                            </Col>\n                            <Col>\n                                <Row>\n                                    <Text style={styles.statsTitle}>Time</Text>\n                                </Row>\n                                <Row>\n                                    <Text style={styles.stats}>\n                                        {this.state.time}\n                                    </Text>\n                                </Row>\n                            </Col>\n                        </Grid>\n\n                        <View elevation={5} style={styles.infoGrid}>\n                            <Text style={styles.info}>{this.state.fullname}</Text>\n                            <Text style={styles.info}>@{this.state.username}</Text>\n                            <Text style={styles.info}>{this.state.email}</Text>\n                        </View>\n\n                        <View style={styles.button}>\n                            <Button label={'Account Settings'} onPress={() => this.onAccountSettingsPress()} />\n                            <Button label={'Log Out'} onPress={() => this.onLogoutPress()} />\n                        </View>\n\n                    </ScrollView>\n                </View>\n\n            ))\n    }\n}\n"]},"metadata":{},"sourceType":"module"}