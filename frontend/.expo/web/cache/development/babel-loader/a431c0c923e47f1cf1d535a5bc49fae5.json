{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/sharankaur/BitFit/frontend/src/routes/progress.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Icon } from 'react-native-elements';\nimport ProgressBarAnimated from 'react-native-progress-bar-animated';\nimport { Col, Row, Grid } from \"react-native-easy-grid\";\nimport { Actions } from 'react-native-router-flux';\nimport axios from 'axios';\nimport api from \"../config\";\nimport Button from \"../components/button\";\nimport NavBar from \"../components/nav_bar\";\nimport LoadingScreen from \"../components/loading\";\nimport blue from \"../images/background.jpg\";\nimport styles from \"../style/r_progress\";\n\nvar Progress = function (_Component) {\n  _inherits(Progress, _Component);\n\n  var _super = _createSuper(Progress);\n\n  function Progress(props) {\n    var _this;\n\n    _classCallCheck(this, Progress);\n\n    _this = _super.call(this, props);\n\n    _this.goToTrophy = function () {\n      Actions.trophy({\n        uid: _this.props.uid\n      });\n    };\n\n    _this.goToProfile = function () {\n      Actions.profile({\n        uid: _this.props.uid\n      });\n    };\n\n    _this.goToMainFocus = function () {\n      Actions.mainfocus({\n        uid: _this.props.uid\n      });\n    };\n\n    _this.goToActivityLog = function () {\n      Actions.activitylog({\n        uid: _this.props.uid\n      });\n    };\n\n    _this.getData = function () {\n      var url1 = 'user/get';\n      var data1 = {\n        'uid': _this.props.uid\n      };\n      var url2 = 'bodyparts/get_body_parts';\n      var data2 = {};\n      var url3 = 'progress/get';\n      var data3 = {\n        'uid': _this.props.uid\n      };\n      var requestOne = api.post(url1, data1);\n      var requestTwo = api.post(url2, data2);\n      var requestThree = api.post(url3, data3);\n      axios.all([requestOne, requestTwo, requestThree]).then(axios.spread(function () {\n        for (var _len = arguments.length, responses = new Array(_len), _key = 0; _key < _len; _key++) {\n          responses[_key] = arguments[_key];\n        }\n\n        var userData = responses[0].data;\n        var bodypartsData = responses[1].data;\n        var progressData = responses[2].data;\n        var progress = {};\n        var body_parts = [];\n        var overallLv = 0;\n\n        for (var body_part_id in progressData) {\n          var body_part_name = bodypartsData[body_part_id].body_part_name;\n          var exp = progressData[body_part_id];\n          body_parts.push(body_part_name);\n          exp['progressBar'] = _this.calculateProgess(exp.exp, exp.level);\n          progress[body_part_name] = exp;\n          overallLv += parseInt(exp.level);\n        }\n\n        _this.setState({\n          progress: progress,\n          body_parts: body_parts,\n          fullname: userData.fullname,\n          avatar: userData.avatar,\n          overallLv: overallLv,\n          isLoading: false\n        });\n      })).catch(function (errors) {\n        console.error(errors);\n      });\n    };\n\n    _this.state = {\n      fullname: \"\",\n      avatar: \"\",\n      overallLv: 0,\n      progress: {},\n      body_parts: [],\n      isLoading: true\n    };\n    return _this;\n  }\n\n  _createClass(Progress, [{\n    key: \"calculateProgess\",\n    value: function calculateProgess(exp, level) {\n      var progressBar = 0.0;\n\n      if (parseInt(level) == 0) {\n        progressBar = parseFloat(exp) * 100;\n      } else {\n        progressBar = (parseFloat(exp) - (Math.pow(parseInt(level), 2) - (parseInt(level) - 1))) / (2 * parseInt(level)) * 100;\n      }\n\n      return progressBar;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.isLoading) {\n        return React.createElement(LoadingScreen, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }\n        });\n      }\n\n      return React.createElement(Grid, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 17\n        }\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }\n      }, React.createElement(Image, {\n        style: {\n          width: \"100%\",\n          height: 200,\n          opacity: 1.8,\n          position: 'absolute'\n        },\n        source: blue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 29\n        }\n      }), React.createElement(NavBar, {\n        left: {\n          uri: \"data:image/gif;base64,\" + this.state.avatar\n        },\n        leftOnPress: this.goToProfile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 29\n        }\n      }), React.createElement(Text, {\n        style: styles.headerStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 29\n        }\n      }, \"Hi \", this.state.fullname, \"!\")))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        elevation: 5,\n        style: styles.whiteBox1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.textStyle2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 25\n        }\n      }, \"Overall Level: \", this.state.overallLv, \" \"))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        elevation: 5,\n        style: styles.whiteBox2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 25\n        }\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.textStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 34\n        }\n      }, \"Focus\")), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.textStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 34\n        }\n      }, \"Progress\")), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.textStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 34\n        }\n      }, \"Level\"))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 25\n        }\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.textStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 33\n        }\n      }, this.state.body_parts[0])), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 29\n        }\n      }, React.createElement(ProgressBarAnimated, {\n        useNativeDriver: true,\n        width: 110,\n        value: this.state.progress[this.state.body_parts[0]].progressBar,\n        backgroundColorOnComplete: \"#6CC644\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 33\n        }\n      })), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.textStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 33\n        }\n      }, this.state.progress[this.state.body_parts[0]].level))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 25\n        }\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.textStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 33\n        }\n      }, this.state.body_parts[1])), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 29\n        }\n      }, React.createElement(ProgressBarAnimated, {\n        useNativeDriver: true,\n        width: 110,\n        value: this.state.progress[this.state.body_parts[1]].progressBar,\n        backgroundColorOnComplete: \"#6CC644\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 33\n        }\n      })), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.textStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 33\n        }\n      }, this.state.progress[this.state.body_parts[1]].level))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 25\n        }\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.textStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 33\n        }\n      }, this.state.body_parts[2])), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 29\n        }\n      }, React.createElement(ProgressBarAnimated, {\n        useNativeDriver: true,\n        width: 110,\n        value: this.state.progress[this.state.body_parts[2]].progressBar,\n        backgroundColorOnComplete: \"#6CC644\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 33\n        }\n      })), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.textStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 33\n        }\n      }, this.state.progress[this.state.body_parts[2]].level))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 25\n        }\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.textStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 33\n        }\n      }, this.state.body_parts[3])), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 29\n        }\n      }, React.createElement(ProgressBarAnimated, {\n        useNativeDriver: true,\n        width: 110,\n        value: this.state.progress[this.state.body_parts[3]].progressBar,\n        backgroundColorOnComplete: \"#6CC644\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 33\n        }\n      })), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.textStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 33\n        }\n      }, this.state.progress[this.state.body_parts[3]].level))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 31\n        }\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.textStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 33\n        }\n      }, this.state.body_parts[4])), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 29\n        }\n      }, React.createElement(ProgressBarAnimated, {\n        useNativeDriver: true,\n        width: 110,\n        value: this.state.progress[this.state.body_parts[4]].progressBar,\n        backgroundColorOnComplete: \"#6CC644\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 33\n        }\n      })), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.textStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 33\n        }\n      }, this.state.progress[this.state.body_parts[4]].level))))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 17\n        }\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: styles.buttonView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 25\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.buttonContainer,\n        onPress: this.goToMainFocus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 29\n        }\n      }, \"Workout\"), React.createElement(Icon, {\n        style: {\n          marginTop: 5\n        },\n        color: \"#FFFFFF\",\n        name: \"timer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 29\n        }\n      })))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: styles.buttonView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 25\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.buttonContainer,\n        onPress: this.goToMainFocus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 29\n        }\n      }, \"Trophy Case\"), React.createElement(Icon, {\n        style: {\n          marginTop: 5\n        },\n        color: \"#FFFFFF\",\n        name: \"lock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 29\n        }\n      })))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: styles.buttonView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 25\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.buttonContainer,\n        onPress: this.goToMainFocus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 29\n        }\n      }, \"Activity Log\"), React.createElement(Icon, {\n        style: {\n          marginTop: 5\n        },\n        color: \"#FFFFFF\",\n        name: \"assignment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 29\n        }\n      }))))));\n    }\n  }]);\n\n  return Progress;\n}(Component);\n\nexport { Progress as default };","map":{"version":3,"sources":["/Users/sharankaur/BitFit/frontend/src/routes/progress.js"],"names":["React","Component","Icon","ProgressBarAnimated","Col","Row","Grid","Actions","axios","api","Button","NavBar","LoadingScreen","blue","styles","Progress","props","goToTrophy","trophy","uid","goToProfile","profile","goToMainFocus","mainfocus","goToActivityLog","activitylog","getData","url1","data1","url2","data2","url3","data3","requestOne","post","requestTwo","requestThree","all","then","spread","responses","userData","data","bodypartsData","progressData","progress","body_parts","overallLv","body_part_id","body_part_name","exp","push","calculateProgess","level","parseInt","setState","fullname","avatar","isLoading","catch","errors","console","error","state","progressBar","parseFloat","Math","pow","container","width","height","opacity","position","uri","headerStyle","whiteBox1","textStyle2","whiteBox2","textStyle","buttonView","buttonContainer","text","marginTop"],"mappings":"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","sourcesContent":["/**\n * The Progress page displays the current state of the user's progress. It allows\n * the user to view and edit their profile information. It allows the user to start a new workout\n * or choose to see their trophy case.\n * \n * Authors: Imran, Sharan, Nour\n */\n\n// External imports\nimport React, { Component } from 'react';\nimport { View, Text, Image, TouchableOpacity } from 'react-native';\nimport { Icon } from 'react-native-elements'\nimport ProgressBarAnimated from 'react-native-progress-bar-animated';\nimport { Col, Row, Grid } from \"react-native-easy-grid\";\nimport { Actions } from 'react-native-router-flux';\nimport axios from 'axios'\n\n// Internal imports\nimport api from '../config'\n\n// Components\nimport Button from \"../components/button\";\nimport NavBar from \"../components/nav_bar\";\nimport LoadingScreen from \"../components/loading\";\n\n// Images\nimport blue from '../images/background.jpg'\n\n// Stylesheet\nimport styles from '../style/r_progress';\n\n\n/**\n * Class that returns the Progress page with correct components and API calls.\n */\nexport default class Progress extends Component {\n\n    // Call the super constructor and initalize a state variable\n    constructor(props) {\n        super(props)\n        this.state = {\n            fullname: \"\",\n            avatar: \"\",\n            overallLv: 0,\n            progress: {},\n            body_parts: [],\n            isLoading: true\n        }\n    }\n\n    // Route to the trophy page when the trophy button is pressed\n    goToTrophy = () => {\n        Actions.trophy({ uid: this.props.uid })\n    }\n\n    // Route to the profile page when the profile button is pressed\n    goToProfile = () => {\n        Actions.profile({ uid: this.props.uid })\n    }\n\n    // Route to the main start a new workout page when start a new workout button is pressed\n    goToMainFocus = () => {\n        Actions.mainfocus({ uid: this.props.uid })\n    }\n\n    // Route to the activity log page when activity log button pressed\n    goToActivityLog = () => {\n        Actions.activitylog({ uid: this.props.uid })\n    }\n\n    getData = () => {\n        let url1 = 'user/get';\n        let data1 = {\n            'uid': this.props.uid\n        };\n\n        let url2 = 'bodyparts/get_body_parts';\n        let data2 = {}\n\n\n        let url3 = 'progress/get';\n        let data3 = {\n            'uid': this.props.uid\n        };\n\n        const requestOne = api.post(url1, data1);\n        const requestTwo = api.post(url2, data2);\n        const requestThree = api.post(url3, data3);\n\n        axios\n            .all([requestOne, requestTwo, requestThree])\n            .then(\n                axios.spread((...responses) => {\n                    const userData = responses[0].data;\n                    const bodypartsData = responses[1].data;\n                    const progressData = responses[2].data;\n\n                    let progress = {}\n                    let body_parts = []\n                    let overallLv = 0;\n                    for (var body_part_id in progressData) {\n                        let body_part_name = bodypartsData[body_part_id].body_part_name\n                        let exp = progressData[body_part_id]\n\n                        body_parts.push(body_part_name)\n                        exp['progressBar'] = this.calculateProgess(exp.exp, exp.level)\n                        progress[body_part_name] = exp\n                        overallLv += parseInt(exp.level)\n                    }\n                    this.setState({\n                        progress: progress,\n                        body_parts: body_parts,\n                        fullname: userData.fullname,\n                        avatar: userData.avatar,\n                        overallLv: overallLv,\n                        isLoading: false\n                    })\n\n                })\n            )\n            .catch(errors => {\n                // react on errors.\n                console.error(errors);\n            });\n    }\n\n    calculateProgess(exp, level) {\n        let progressBar = 0.0\n        if (parseInt(level) == 0) {\n            progressBar = parseFloat(exp) * 100\n\n        } else {\n            progressBar = (parseFloat(exp) - (Math.pow(parseInt(level), 2) - (parseInt(level) - 1)))\n                / (2 * parseInt(level)) * 100\n        }\n        return progressBar\n    }\n\n    // Make API calls when the screen mounts\n    componentDidMount() {\n        this.getData()\n    }\n\n    // Render the correct components for the Progress screen\n    render() {\n        // If the API call is not complete, display the loading screen\n        if (this.state.isLoading) {\n            return (\n                <LoadingScreen></LoadingScreen>\n            )\n        }\n        // const { progress } = this.state;\n        // return (\n        //     Object.keys(progress).map((key, index) => (\n        //         <Text>Body Part:{key}, Level:{progress[key].level}, Exp:{progress[key].exp}</Text>\n        //     ))\n        // );\n        return (\n            <Grid style={styles.container}>\n                <Row>\n                    <Col>\n                        <View>\n                            <Image\n                                style={{ width: \"100%\", height: 200, opacity: 1.8, position: 'absolute' }}\n                                source={blue}\n                            />\n                            <NavBar\n                                left={{ uri: `data:image/gif;base64,${this.state.avatar}` }}\n                                leftOnPress={this.goToProfile}>\n                            </NavBar>\n                            <Text style={styles.headerStyle}>Hi {this.state.fullname}!</Text>\n                        </View>\n                    </Col>\n                </Row>\n                <Row>\n                    <View elevation={5} style={styles.whiteBox1}>\n                        <Text style={styles.textStyle2}>Overall Level: {this.state.overallLv} </Text>\n                    </View>\n\n                </Row>\n                <Row>\n                    <View elevation={5} style={styles.whiteBox2}>\n\n                        <Row>\n                            <Col><Text style={styles.textStyle}>Focus</Text></Col>\n                            <Col><Text style={styles.textStyle}>Progress</Text></Col>\n                            <Col><Text style={styles.textStyle}>Level</Text></Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Text style={styles.textStyle}>{this.state.body_parts[0]}</Text>\n                            </Col>\n                            <Col>\n                                <ProgressBarAnimated\n                                    useNativeDriver={true}\n                                    width={110}\n                                    value={this.state.progress[this.state.body_parts[0]].progressBar}\n                                    backgroundColorOnComplete=\"#6CC644\"\n                                />\n                            </Col>\n                            <Col>\n                                <Text style={styles.textStyle}>{this.state.progress[this.state.body_parts[0]].level}</Text>\n                            </Col>\n                        </Row>\n\n                        <Row>\n                            <Col>\n                                <Text style={styles.textStyle}>{this.state.body_parts[1]}</Text>\n                            </Col>\n                            <Col>\n                                <ProgressBarAnimated\n                                    useNativeDriver={true}\n                                    width={110}\n                                    value={this.state.progress[this.state.body_parts[1]].progressBar}\n                                    backgroundColorOnComplete=\"#6CC644\"\n                                />\n                            </Col>\n                            <Col>\n                                <Text style={styles.textStyle}>{this.state.progress[this.state.body_parts[1]].level}</Text>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Text style={styles.textStyle}>{this.state.body_parts[2]}</Text>\n                            </Col>\n                            <Col>\n                                <ProgressBarAnimated\n                                    useNativeDriver={true}\n                                    width={110}\n                                    value={this.state.progress[this.state.body_parts[2]].progressBar}\n                                    backgroundColorOnComplete=\"#6CC644\"\n                                />\n                            </Col>\n                            <Col>\n                                <Text style={styles.textStyle}>{this.state.progress[this.state.body_parts[2]].level}</Text>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Text style={styles.textStyle}>{this.state.body_parts[3]}</Text>\n                            </Col>\n                            <Col>\n                                <ProgressBarAnimated\n                                    useNativeDriver={true}\n                                    width={110}\n                                    value={this.state.progress[this.state.body_parts[3]].progressBar}\n                                    backgroundColorOnComplete=\"#6CC644\"\n                                />\n                            </Col>\n                            <Col>\n                                <Text style={styles.textStyle}>{this.state.progress[this.state.body_parts[3]].level}</Text>\n                            </Col>\n                        </Row><Row>\n                            <Col>\n                                <Text style={styles.textStyle}>{this.state.body_parts[4]}</Text>\n                            </Col>\n                            <Col>\n                                <ProgressBarAnimated\n                                    useNativeDriver={true}\n                                    width={110}\n                                    value={this.state.progress[this.state.body_parts[4]].progressBar}\n                                    backgroundColorOnComplete=\"#6CC644\"\n                                />\n                            </Col>\n                            <Col>\n                                <Text style={styles.textStyle}>{this.state.progress[this.state.body_parts[4]].level}</Text>\n                            </Col>\n                        </Row>\n                    </View>\n                </Row>\n\n                <Row>\n                    <Col>\n                        {/* <View style={styles.buttonView}>\n                            <Button\n                                label={\"Workout\"}\n                                onPress={this.goToMainFocus}\n                                style={styles.buttonContainer}\n                            />\n                        </View> */}\n                        <View style={styles.buttonView}>\n                        <TouchableOpacity style={styles.buttonContainer} onPress={this.goToMainFocus}>\n                            <Text style={styles.text}>Workout</Text>\n                            <Icon style={{marginTop: 5}} color=\"#FFFFFF\" name='timer' />\n                        </TouchableOpacity>\n                        </View>\n                    </Col>\n                    <Col>\n                        {/* <View style={styles.buttonView}>\n                            <Button\n                                label={\"Trophy Case\"}\n                                onPress={this.goToTrophy}\n                                style={styles.buttonContainer}\n                            />\n                        </View> */}\n                        <View style={styles.buttonView}>\n                        <TouchableOpacity style={styles.buttonContainer} onPress={this.goToMainFocus}>\n                            <Text style={styles.text}>Trophy Case</Text>\n                            <Icon style={{marginTop: 5}} color=\"#FFFFFF\" name='lock' />\n                        </TouchableOpacity>\n                        </View>\n                    </Col>\n                    <Col>\n                        {/* <View style={styles.buttonView}>\n                            <Button\n                                label={\"Activity Log\"}\n                                onPress={this.goToActivityLog}\n                                style={styles.buttonContainer}\n                            /> \n                        </View> */}\n                        <View style={styles.buttonView}>\n                        <TouchableOpacity style={styles.buttonContainer} onPress={this.goToMainFocus}>\n                            <Text style={styles.text}>Activity Log</Text>\n                            <Icon style={{marginTop: 5}} color=\"#FFFFFF\" name='assignment' />\n                        </TouchableOpacity>\n                        </View>\n                    </Col>\n                </Row>\n            </Grid>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}