{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/sharankaur/BitFit/frontend/src/routes/bodyparts.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Icon } from \"react-native-web/dist/index\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport { Col, Row, Grid } from \"react-native-easy-grid\";\nimport { Actions } from 'react-native-router-flux';\nimport api from \"../config\";\nimport LoadingScreen from \"../components/loading\";\nimport Button from \"../components/button\";\nimport blue from \"../images/blue.jpg\";\nimport styles from \"../style/r_bodyparts\";\nimport backButton from \"../images/back_button.png\";\n\nvar MainFocusPage = function (_Component) {\n  _inherits(MainFocusPage, _Component);\n\n  var _super = _createSuper(MainFocusPage);\n\n  function MainFocusPage(props) {\n    var _this;\n\n    _classCallCheck(this, MainFocusPage);\n\n    _this = _super.call(this, props);\n\n    _this.get_body_parts = function () {\n      var url = 'bodyparts/get_body_parts';\n      api.post(url).then(function (response) {\n        var body_parts = [];\n        var images = [];\n\n        for (var body_part_id in response.data) {\n          body_parts.push(response.data[body_part_id].body_part_name);\n          images[response.data[body_part_id].body_part_name] = response.data[body_part_id].image;\n        }\n\n        _this.setState({\n          bodyparts: body_parts,\n          images: images,\n          focus: body_parts[0],\n          focus_image: images[body_parts[0]],\n          isLoading: false\n        });\n      }).catch(function (error) {\n        if (error.response) {\n          console.log(error.response.data);\n          console.log(error.response.status);\n        } else if (error.request) {\n          console.log(error.request);\n        } else {\n          console.log('Error', error.message);\n        }\n      });\n    };\n\n    _this.goToSuggestedWorkouts = function () {\n      Actions.suggestedworkouts({\n        focus: _this.state.focus,\n        uid: _this.props.uid\n      });\n    };\n\n    _this.goBackProgress = function () {\n      Actions.pop();\n    };\n\n    _this.dropdownOptions = function () {\n      return _this.state.bodyparts.map(function (bodypart) {\n        return React.createElement(Picker.Item, {\n          label: bodypart,\n          value: bodypart,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 11\n          }\n        });\n      });\n    };\n\n    _this.updateDropdown = function (value) {\n      _this.setState({\n        focus: value,\n        focus_image: _this.state.images[value]\n      });\n    };\n\n    _this.state = {\n      bodyparts: [],\n      images: {},\n      focus: \"\",\n      focus_image: \"\",\n      isLoading: true\n    };\n    return _this;\n  }\n\n  _createClass(MainFocusPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.get_body_parts();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.isLoading) {\n        return React.createElement(LoadingScreen, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 5\n          }\n        });\n      } else return React.createElement(Grid, {\n        style: {\n          backgroundColor: '#e7e7e7'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 4\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 5\n        }\n      }, React.createElement(Image, {\n        style: {\n          width: window.width,\n          height: 200,\n          opacity: 1.8\n        },\n        source: blue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 6\n        }\n      }), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 6\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          marginTop: -180,\n          marginLeft: 10\n        },\n        onPress: function onPress() {\n          return _this2.goBackProgress();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 7\n        }\n      }, React.createElement(Image, {\n        style: {\n          width: 45,\n          height: 45\n        },\n        source: require(\"../images/back_button.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 8\n        }\n      }))), React.createElement(Text, {\n        style: {\n          fontSize: 50,\n          color: 'white',\n          textAlign: 'center',\n          fontWeight: '100',\n          marginTop: -130\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 6\n        }\n      }, \" Main Focus \")), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 5\n        }\n      }), React.createElement(Text, {\n        style: {\n          fontSize: 20,\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 5\n        }\n      }, \"Select a Main Focus for your Workout:\"), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          alignSelf: 'center',\n          marginVertical: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 5\n        }\n      }, React.createElement(Picker, {\n        selectedValue: this.state.focus,\n        style: {\n          backgroundColor: '#e7e7e7',\n          height: 50,\n          width: 200,\n          marginTop: 20\n        },\n        onValueChange: function onValueChange(itemValue, _) {\n          return _this2.updateDropdown(itemValue);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 6\n        }\n      }, this.dropdownOptions())), React.createElement(View, {\n        style: styles.buttonView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 5\n        }\n      }, React.createElement(Button, {\n        style: styles.buttonStyle,\n        onPress: function onPress() {\n          return _this2.goToSuggestedWorkouts();\n        },\n        label: \"Continue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 6\n        }\n      })));\n    }\n  }]);\n\n  return MainFocusPage;\n}(Component);\n\nexport { MainFocusPage as default };","map":{"version":3,"sources":["/Users/sharankaur/BitFit/frontend/src/routes/bodyparts.js"],"names":["React","Component","Icon","Col","Row","Grid","Actions","api","LoadingScreen","Button","blue","styles","backButton","MainFocusPage","props","get_body_parts","url","post","then","response","body_parts","images","body_part_id","data","push","body_part_name","image","setState","bodyparts","focus","focus_image","isLoading","catch","error","console","log","status","request","message","goToSuggestedWorkouts","suggestedworkouts","state","uid","goBackProgress","pop","dropdownOptions","map","bodypart","updateDropdown","value","backgroundColor","width","window","height","opacity","marginTop","marginLeft","require","fontSize","color","textAlign","fontWeight","flexDirection","alignSelf","marginVertical","itemValue","_","buttonView","buttonStyle"],"mappings":"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","sourcesContent":["/**\n * The bodyparts.js file handles everything related to choosing a main focus on the\n * Main Focus page.\n * \n * Authors: Jaz, Sharan, Steven, Eric\n */\n\n// External imports\nimport React, { Component } from 'react'\nimport { Text, View, TouchableOpacity, Image, Icon, Picker } from 'react-native'\nimport { Col, Row, Grid } from \"react-native-easy-grid\";\n// import { Picker } from '@react-native-community/picker';\nimport { Actions } from 'react-native-router-flux';\n\n// Internal imports\nimport api from '../config'\n\n// Components\nimport LoadingScreen from \"../components/loading\"\nimport Button from '../components/button';\nimport blue from '../images/blue.jpg';\n\n// Stylesheet\nimport styles from '../style/r_bodyparts';\n\n// Images\nimport backButton from '../images/back_button.png';\n\n/**\n * Class that returns the Main Focus page with correct components and API calls.\n */\nexport default class MainFocusPage extends Component {\n\n\t// Call the super constructor and initalize state variables\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tbodyparts: [],\n\t\t\timages: {},\n\t\t\tfocus: \"\",\n\t\t\tfocus_image: \"\",\n\t\t\tisLoading: true\n\t\t}\n\t}\n\n\tget_body_parts = () => {\n\t\t// Indicate which API to call and what data to pass in\n\t\tlet url = 'bodyparts/get_body_parts';\n\t\tapi.post(url)\n\t\t\t// Success\n\t\t\t.then(response => {\n\n\t\t\t\tlet body_parts = []\n\t\t\t\tlet images = []\n\t\t\t\tfor (var body_part_id in response.data) {\n\t\t\t\t\tbody_parts.push(response.data[body_part_id].body_part_name)\n\t\t\t\t\timages[response.data[body_part_id].body_part_name] = response.data[body_part_id].image\n\t\t\t\t}\n\n\t\t\t\tthis.setState({\n\t\t\t\t\tbodyparts: body_parts,\n\t\t\t\t\timages: images,\n\t\t\t\t\tfocus: body_parts[0],\n\t\t\t\t\tfocus_image: images[body_parts[0]],\n\t\t\t\t\tisLoading: false\n\t\t\t\t})\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\t// Log error \n\t\t\t\tif (error.response) {\n\t\t\t\t\t// Call was unsuccessful\n\t\t\t\t\tconsole.log(error.response.data);\n\t\t\t\t\tconsole.log(error.response.status);\n\t\t\t\t} else if (error.request) {\n\t\t\t\t\t// Request was made but no response was received.\n\t\t\t\t\tconsole.log(error.request);\n\t\t\t\t} else {\n\t\t\t\t\t// Something else cause an error\n\t\t\t\t\tconsole.log('Error', error.message);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\t// Route to the login page when Continue button is pressed\n\tgoToSuggestedWorkouts = () => {\n\t\tActions.suggestedworkouts({ focus: this.state.focus, uid: this.props.uid });\n\t}\n\n\t// Route to the login page when Back button is pressed\n\tgoBackProgress = () => {\n\t\tActions.pop();\n\t}\n\n\t// Displays the dropdown options\n\tdropdownOptions = () => {\n\t\treturn this.state.bodyparts.map((bodypart) => {\n\t\t\treturn <Picker.Item label={bodypart} value={bodypart} />\n\t\t})\n\t}\n\n\t// Updates the value of the dropdown based on what's selected\n\tupdateDropdown = (value) => {\n\t\tthis.setState({\n\t\t\tfocus: value,\n\t\t\tfocus_image: this.state.images[value]\n\t\t})\n\t}\n\n\t// Query database while rendering page for the body parts\n\tcomponentDidMount() {\n\t\tthis.get_body_parts()\n\t}\n\n\t// Render the correct components for the Main Focus screen\n\trender() {\n\t\t// If the API call is not complete, display the loading screen\n\t\tif (this.state.isLoading) {\n\t\t\treturn (\n\t\t\t\t<LoadingScreen></LoadingScreen>\n\t\t\t)\n\t\t} else return (\n\t\t\t<Grid style={{ backgroundColor: '#e7e7e7' }}>\n\t\t\t\t<View>\n\t\t\t\t\t<Image\n\t\t\t\t\t\tstyle={{ width: window.width, height: 200, opacity: 1.8 }}\n\t\t\t\t\t\tsource={blue}\n\t\t\t\t\t/>\n\t\t\t\t\t<View>\n\t\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\t\tstyle={{ marginTop: -180, marginLeft: 10 }}\n\t\t\t\t\t\t\tonPress={() => this.goBackProgress()}>\n\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\tstyle={{ width: 45, height: 45 }}\n\t\t\t\t\t\t\t\tsource={require('../images/back_button.png')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t</View>\n\t\t\t\t\t<Text style={{\n\t\t\t\t\t\tfontSize: 50,\n\t\t\t\t\t\t// fontFamily: 'sans-serif-light',\n\t\t\t\t\t\tcolor: 'white',\n\t\t\t\t\t\ttextAlign: 'center',\n\t\t\t\t\t\tfontWeight: '100',\n\t\t\t\t\t\tmarginTop: -130\n\t\t\t\t\t}}> Main Focus </Text>\n\t\t\t\t</View>\n\t\t\t\t{/* <View style={{ backgroundColor: '#e7e7e7', marginTop: 20, marginLeft: 20 }}>\n\t\t\t\t\t\t\t<TouchableOpacity onPress={() => this.goBackProgress()}>\n\t\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\t\tstyle={{ width: 45, height: 45 }}\n\t\t\t\t\t\t\t\t\tsource={require('../images/back_button.png')}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col></Col>\n\t\t\t\t\t<Col></Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<View style={{\n\t\t\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\t\t\talignSelf: 'center',\n\t\t\t\t\t\t\tbackgroundColor: '#e7e7e7'\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<Text style={{\n\t\t\t\t\t\t\t\tfontSize: 30,\n\t\t\t\t\t\t\t\t// fontFamily: 'sans-serif-condensed'\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\tMain Focus\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</View> */}\n\t\t\t\t{/* </Col>\n\t\t\t\t</Row> */}\n\t\t\t\t{/* <Row>\n\t\t\t\t\t<View elevation={5} style={{\n\t\t\t\t\t\tbackgroundColor: 'white',\n\t\t\t\t\t\twidth: 380,\n\t\t\t\t\t\tpaddingTop: 50,\n\t\t\t\t\t\tpaddingBottom: 295,\n\t\t\t\t\t\tmarginVertical: 10,\n\t\t\t\t\t\tmarginTop: 80,\n\t\t\t\t\t\tmarginBottom: 80,\n\t\t\t\t\t\tmarginHorizontal: 15,\n\t\t\t\t\t\tborderRadius: 20\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<View style={{\n\t\t\t\t\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\t\t\t\t\talignSelf: 'center',\n\t\t\t\t\t\t\t\t\talignContent: 'center',\n\t\t\t\t\t\t\t\t\tflexWrap: 'wrap',\n\t\t\t\t\t\t\t\t\tmarginVertical: 100\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<Text style={{\n\t\t\t\t\t\t\t\t\t\tfontSize: 20,\n\t\t\t\t\t\t\t\t\t\t// fontFamily: 'monospace',\n\t\t\t\t\t\t\t\t\t\ttextAlign: 'center'\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\tSelect a Main Focus for your Workout:\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<View style={{\n\t\t\t\t\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\t\t\t\t\talignSelf: 'center',\n\t\t\t\t\t\t\t\t\tmarginVertical: 50\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<Picker\n\t\t\t\t\t\t\t\t\t\tselectedValue={this.state.focus}\n\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: '#e7e7e7', height: 50, width: 200, marginTop: 20 }}\n\t\t\t\t\t\t\t\t\t\tonValueChange={(itemValue, _) =>\n\t\t\t\t\t\t\t\t\t\t\tthis.updateDropdown(itemValue)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{this.dropdownOptions()}\n\t\t\t\t\t\t\t\t\t</Picker>\n\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col></Col>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<View style={{\n\t\t\t\t\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\t\t\t\t\talignSelf: 'center',\n\t\t\t\t\t\t\t\t\tmarginVertical: 220,\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\t\t\tstyle={styles.focusImage}\n\t\t\t\t\t\t\t\t\t\tsource={{ uri: this.state.focus_image }}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col></Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</View>\n\t\t\t\t</Row>\n\t\t\t\t<Row></Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col></Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<View style={styles.buttonView}>\n\t\t\t\t\t\t\t<Button style={styles.buttonStyle} onPress={() => this.goToSuggestedWorkouts()}\n\t\t\t\t\t\t\t\tlabel=\"Continue\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col></Col>\n\t\t\t\t</Row> */}\n\t\t\t\t<Row></Row>\n\t\t\t\t<Text style={{\n\t\t\t\t\tfontSize: 20,\n\t\t\t\t\t// fontFamily: 'monospace',\n\t\t\t\t\ttextAlign: 'center'\n\t\t\t\t}}>\n\t\t\t\t\tSelect a Main Focus for your Workout:\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t<View style={{\n\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\talignSelf: 'center',\n\t\t\t\t\tmarginVertical: 50\n\t\t\t\t}}>\n\t\t\t\t\t<Picker\n\t\t\t\t\t\tselectedValue={this.state.focus}\n\t\t\t\t\t\tstyle={{ backgroundColor: '#e7e7e7', height: 50, width: 200, marginTop: 20 }}\n\t\t\t\t\t\tonValueChange={(itemValue, _) =>\n\t\t\t\t\t\t\tthis.updateDropdown(itemValue)\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t{this.dropdownOptions()}\n\t\t\t\t\t</Picker>\n\t\t\t\t</View>\n\t\t\t\t<View style={styles.buttonView}>\n\t\t\t\t\t<Button style={styles.buttonStyle} onPress={() => this.goToSuggestedWorkouts()}\n\t\t\t\t\t\tlabel=\"Continue\"\n\t\t\t\t\t/>\n\t\t\t\t</View>\n\t\t\t</Grid >\n\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}