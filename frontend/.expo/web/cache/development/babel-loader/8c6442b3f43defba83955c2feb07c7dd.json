{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/sharankaur/BitFit/frontend/src/routes/sign_up.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { Actions } from 'react-native-router-flux';\nimport * as ImagePicker from 'expo-image-picker';\nimport Constants from 'expo-constants';\nimport * as Permissions from 'expo-permissions';\nimport api from \"../config\";\nimport styles from \"../style/r_sign_up\";\nimport Button from \"../components/button\";\nimport Input from \"../components/input\";\nimport { defaultPhoto } from \"../images/default_photo.js\";\nimport blue from \"../images/login_background.jpg\";\n\nvar SignUp = function (_Component) {\n  _inherits(SignUp, _Component);\n\n  var _super = _createSuper(SignUp);\n\n  function SignUp(props) {\n    var _this;\n\n    _classCallCheck(this, SignUp);\n\n    _this = _super.call(this, props);\n\n    _this.goToLogIn = function () {\n      Actions.pop();\n    };\n\n    _this.handleAvatarChange = function (avatar) {\n      _this.setState({\n        avatar: avatar\n      });\n    };\n\n    _this.handleUserNameChange = function (username) {\n      _this.setState({\n        username: username\n      });\n    };\n\n    _this.handleFullNameChange = function (fullname) {\n      _this.setState({\n        fullname: fullname\n      });\n    };\n\n    _this.handleEmailChange = function (email) {\n      _this.setState({\n        email: email\n      });\n    };\n\n    _this.handlePasswordChange = function (password) {\n      _this.setState({\n        password: password\n      });\n    };\n\n    _this.handleSignUpPress = function () {\n      var url = 'user/signup';\n      var data = {\n        'username': _this.state.username,\n        'fullname': _this.state.fullname,\n        'email': _this.state.email,\n        'password': _this.state.password,\n        'avatar': _this.state.avatar\n      };\n      api.post(url, data).then(function (response) {\n        Actions.progress({\n          uid: response.data[\"uid\"]\n        });\n      }).catch(function (error) {\n        Alert.alert('Invalid Credentials', \"Please try again.\", [{\n          text: 'OK'\n        }], {\n          cancelable: false\n        });\n\n        if (error.response) {\n          console.log(error.response.data.username);\n          console.log(error.response.data.fullname);\n          console.log(error.response.status);\n        } else if (error.request) {\n          console.log(error.request);\n        } else {\n          console.log('Error', error.message);\n        }\n      });\n    };\n\n    _this._pickImage = function _callee() {\n      var result;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n                mediaTypes: ImagePicker.MediaTypeOptions.All,\n                allowsEditing: true,\n                aspect: [4, 3],\n                quality: 1,\n                base64: true\n              }));\n\n            case 3:\n              result = _context.sent;\n\n              if (!result.cancelled) {\n                _this.setState({\n                  avatar: result.base64\n                });\n              }\n\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    };\n\n    _this.getPermissionAsync = function _callee2() {\n      var _await$Permissions$as, status;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!Constants.platform.ios) {\n                _context2.next = 6;\n                break;\n              }\n\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA_ROLL));\n\n            case 3:\n              _await$Permissions$as = _context2.sent;\n              status = _await$Permissions$as.status;\n\n              if (status !== 'granted') {\n                alert('Sorry, we need camera roll permissions to make this work!');\n              }\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      username: \"\",\n      fullname: \"\",\n      email: \"\",\n      password: \"\",\n      avatar: defaultPhoto\n    };\n    return _this;\n  }\n\n  _createClass(SignUp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getPermissionAsync();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        style: styles.backgroundImage,\n        source: blue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 17\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: this._pickImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        style: styles.photoStyle,\n        resizeMode: \"cover\",\n        source: {\n          uri: \"data:image/gif;base64,\" + this.state.avatar\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }\n      })), React.createElement(KeyboardAvoidingView, {\n        behavior: Platform.OS == \"ios\" ? \"padding\" : \"height\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: Keyboard.dismiss,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: styles.form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 25\n        }\n      }, React.createElement(Input, {\n        value: this.state.username,\n        onChangeText: this.handleUserNameChange,\n        placeholder: \"Username...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 29\n        }\n      }), React.createElement(Input, {\n        value: this.state.fullname,\n        onChangeText: this.handleFullNameChange,\n        placeholder: \"Full name...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 29\n        }\n      }), React.createElement(Input, {\n        value: this.state.email,\n        onChangeText: this.handleEmailChange,\n        placeholder: \"Email...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 29\n        }\n      }), React.createElement(Input, {\n        value: this.state.password,\n        onChangeText: this.handlePasswordChange,\n        placeholder: \"Password...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 29\n        }\n      }), React.createElement(Button, {\n        label: \"Sign Up\",\n        onPress: this.handleSignUpPress,\n        disabled: !this.state.username || !this.state.fullname || !this.state.email || !this.state.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 29\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: this.goToLogIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonTextStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 33\n        }\n      }, \"Already have an account? Login here.\"))))));\n    }\n  }]);\n\n  return SignUp;\n}(Component);\n\nexport { SignUp as default };","map":{"version":3,"sources":["/Users/sharankaur/BitFit/frontend/src/routes/sign_up.js"],"names":["React","Component","Actions","ImagePicker","Constants","Permissions","api","styles","Button","Input","defaultPhoto","blue","SignUp","props","goToLogIn","pop","handleAvatarChange","avatar","setState","handleUserNameChange","username","handleFullNameChange","fullname","handleEmailChange","email","handlePasswordChange","password","handleSignUpPress","url","data","state","post","then","response","progress","uid","catch","error","Alert","alert","text","cancelable","console","log","status","request","message","_pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","base64","result","cancelled","getPermissionAsync","platform","ios","askAsync","CAMERA_ROLL","container","backgroundImage","photoStyle","uri","Platform","OS","Keyboard","dismiss","form","buttonTextStyle"],"mappings":"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","sourcesContent":["/**\n * The signup page that allows the user to enter their information to create an account.\n * Description: We have a sign up class that contains the logic to read user input in text\n * fields. It also has a subtle fix where the avatar is hidden when the user is typing text\n * and displayed when the user is done typying text.\n * \n * Authors: Imran, Sharan, Nour\n */\n\n// External imports\nimport React, { Component } from 'react';\nimport { Image, View, Text, TouchableOpacity, Alert, KeyboardAvoidingView, Platform, TouchableWithoutFeedback, Keyboard } from \"react-native\";\nimport { Actions } from 'react-native-router-flux';\n\n// DEBUG\nimport * as ImagePicker from 'expo-image-picker';\nimport Constants from 'expo-constants';\nimport * as Permissions from 'expo-permissions';\n\n// Internal imports\nimport api from '../config'\n\n// Stylesheet\nimport styles from '../style/r_sign_up';\n\n\n// Components\nimport Button from \"../components/button\";\nimport Input from \"../components/input\";\n\n// Images \nimport { defaultPhoto } from '../images/default_photo.js';\nimport blue from '../images/login_background.jpg';\n\n/**\n * Class that returns the SignUp page with correct components and API calls.\n */\nexport default class SignUp extends Component {\n\n    // Call the super constructor and initalize a state variable\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: \"\",\n            fullname: \"\",\n            email: \"\",\n            password: \"\",\n            avatar: defaultPhoto,\n        }\n    }\n\n    // Route to the login page when login button is pressed\n    goToLogIn = () => {\n        Actions.pop()\n    }\n\n    // Set the avatar state variable when it is changed on UI\n    handleAvatarChange = (avatar) => {\n        this.setState({ avatar: avatar });\n    };\n\n    // Set the username state variable when it is changed on UI\n    handleUserNameChange = (username) => {\n        this.setState({ username: username });\n    };\n\n    // Set the fullname state variable when it is changed on UI\n    handleFullNameChange = (fullname) => {\n        this.setState({ fullname: fullname });\n    };\n\n    // Set the email state variable when it is changed on UI\n    handleEmailChange = (email) => {\n        this.setState({ email: email });\n    }\n\n    // Set the password state variable when it is changed on UI\n    handlePasswordChange = (password) => {\n        this.setState({ password: password });\n    };\n\n    /**\n     * When the signup button is pressed, the data in the text fields are passed\n     * in an API call to the backend to create the user, add the relevant data to\n     * the database, and log the user in. It recieves a response object that is \n     * caught and processed accordingly.\n     */\n    handleSignUpPress = () => {\n        /*\n        IMPORTANT: FOLLOW THIS FORMAT TO MAKE API CALLS\n        Notes:\n        - only last two parts should change in url field\n        - data should match \"Expected data\" in API method header\n        - response.data will match \"Expected response\" in API method header\n        - If code steps into .then: call went through\n        - If code steps into .catch: error (use postman to debug)\n        - You need to initialize .then and .catch as arrow functions if you\n          want to edit states in them\n        */\n\n        // Indicate which API to call and what data to pass in\n        let url = 'user/signup';\n        let data = {\n            'username': this.state.username,\n            'fullname': this.state.fullname,\n            'email': this.state.email,\n            'password': this.state.password,\n            'avatar': this.state.avatar\n        };\n\n        // Make API call\n        api.post(url, data)\n            // Success\n            .then(response => {\n                /* Navigate to progress page and pass uid as prop. This allows\n                the next page to know which user is logged in */\n                Actions.progress({ uid: response.data[\"uid\"] })\n            })\n\n            // Error\n            .catch(error => {\n                // Display alert if there was an errr logging in\n                Alert.alert(\n                    'Invalid Credentials',\n                    \"Please try again.\",\n                    [{ text: 'OK' }],\n                    { cancelable: false }\n                );\n\n                // Log error \n                if (error.response) {\n                    // Call was unsuccessful\n                    console.log(error.response.data.username);\n                    console.log(error.response.data.fullname);\n                    console.log(error.response.status);\n                } else if (error.request) {\n                    // Request was made but no response was received.\n                    console.log(error.request);\n                } else {\n                    // Something else cause an error\n                    console.log('Error', error.message);\n                }\n            })\n    }\n\n    _pickImage = async () => {\n        try {\n            let result = await ImagePicker.launchImageLibraryAsync({\n                mediaTypes: ImagePicker.MediaTypeOptions.All,\n                allowsEditing: true,\n                aspect: [4, 3],\n                quality: 1,\n                base64: true\n            });\n            if (!result.cancelled) {\n                this.setState({ avatar: result.base64 });\n            }\n        } catch (E) {\n            console.log(E);\n        }\n    };\n\n\n    componentDidMount() {\n        this.getPermissionAsync();\n    }\n\n    getPermissionAsync = async () => {\n        if (Constants.platform.ios) {\n            const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n            if (status !== 'granted') {\n                alert('Sorry, we need camera roll permissions to make this work!');\n            }\n        }\n    };\n\n    // Render the correct components for the SignUp screen\n    render() {\n        return (\n            <View style={styles.container}>\n                <Image style={styles.backgroundImage} source={blue} />\n                <TouchableOpacity onPress={this._pickImage}>\n                    <Image\n                        style={styles.photoStyle}\n                        resizeMode='cover'\n                        source={{ uri: `data:image/gif;base64,${this.state.avatar}` }}\n                    />\n                </TouchableOpacity>\n                <KeyboardAvoidingView\n                    behavior={Platform.OS == \"ios\" ? \"padding\" : \"height\"}>\n                    <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n                        <View style={styles.form}>\n                            <Input\n                                value={this.state.username}\n                                onChangeText={this.handleUserNameChange}\n                                placeholder={\"Username...\"}\n                            />\n                            <Input\n                                value={this.state.fullname}\n                                onChangeText={this.handleFullNameChange}\n                                placeholder={\"Full name...\"}\n                            />\n                            <Input\n                                value={this.state.email}\n                                onChangeText={this.handleEmailChange}\n                                placeholder={\"Email...\"}\n                            />\n                            <Input\n                                value={this.state.password}\n                                onChangeText={this.handlePasswordChange}\n                                placeholder={\"Password...\"}\n                            />\n                            <Button\n                                label={\"Sign Up\"}\n                                onPress={this.handleSignUpPress}\n                                disabled={!this.state.username || !this.state.fullname || !this.state.email || !this.state.password}\n\n                            />\n                            <TouchableOpacity onPress={this.goToLogIn} >\n                                <Text style={styles.buttonTextStyle}>\n                                    Already have an account? Login here.\n                        </Text>\n                            </TouchableOpacity>\n                        </View>\n                    </TouchableWithoutFeedback>\n                </KeyboardAvoidingView>\n            </View>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}